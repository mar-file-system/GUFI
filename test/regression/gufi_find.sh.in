#!/usr/bin/env bash
# This file is part of GUFI, which is part of MarFS, which is released
# under the BSD license.
#
#
# Copyright (c) 2017, Los Alamos National Security (LANS), LLC
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation and/or
# other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
# From Los Alamos National Security, LLC:
# LA-CC-15-039
#
# Copyright (c) 2017, Los Alamos National Security, LLC All rights reserved.
# Copyright 2017. Los Alamos National Security, LLC. This software was produced
# under U.S. Government contract DE-AC52-06NA25396 for Los Alamos National
# Laboratory (LANL), which is operated by Los Alamos National Security, LLC for
# the U.S. Department of Energy. The U.S. Government has rights to use,
# reproduce, and distribute this software.  NEITHER THE GOVERNMENT NOR LOS
# ALAMOS NATIONAL SECURITY, LLC MAKES ANY WARRANTY, EXPRESS OR IMPLIED, OR
# ASSUMES ANY LIABILITY FOR THE USE OF THIS SOFTWARE.  If software is
# modified to produce derivative works, such modified software should be
# clearly marked, so as not to confuse it with the version available from
# LANL.
#
# THIS SOFTWARE IS PROVIDED BY LOS ALAMOS NATIONAL SECURITY, LLC AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL LOS ALAMOS NATIONAL SECURITY, LLC OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
# OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
# OF SUCH DAMAGE.



set -e
source @CMAKE_CURRENT_BINARY_DIR@/setup.sh "gufi_find" 1

FPRINT="gufi_query.fprint"
REFERENCE="not_as_old_file"

cleanup() {
    rm -rf "${FPRINT}" "${REFERENCE}"
}

cleanup

touch -amt 197001010001 "${REFERENCE}"            # 1 minute after epoch

(
run_no_sort "${GUFI_FIND} --help"

run_no_sort "${GUFI_FIND} -H 2>&1 >/dev/null"
run_no_sort "${GUFI_FIND} -L 2>&1 >/dev/null"
run_no_sort "${GUFI_FIND} -P 2>&1 >/dev/null"
run_no_sort "${GUFI_FIND} -D 2>&1 >/dev/null"
run_no_sort "${GUFI_FIND} -O 2>&1 >/dev/null"

run_sort "${GUFI_FIND}"
run_sort "${GUFI_FIND} -amin +0"
run_sort "${GUFI_FIND} -anewer ${REFERENCE}"      # all
run_sort "${GUFI_FIND} -atime +0"
run_sort "${GUFI_FIND} -cmin +0"
run_sort "${GUFI_FIND} -cnewer ${REFERENCE}"      # none
run_sort "${GUFI_FIND} -ctime +0"
run_sort "${GUFI_FIND} -empty"
run_sort "${GUFI_FIND} -executable"
run_sort "${GUFI_FIND} -false"
run_sort "${GUFI_FIND} -iname 'LEAF'"             # regex on file name (should be glob, but glob is case sensitive)
run_sort "${GUFI_FIND} -inum 7"                   # directory
run_sort "${GUFI_FIND} -inum 0"                   # old file
run_sort "${GUFI_FIND} -inum 9"                   # file_symlink
run_sort "${GUFI_FIND} -iregex 'LEAF'"            # regex on whole path
run_sort "${GUFI_FIND} -links 1 -type f"          # directory and symlinks change depending on filesystem
run_sort "${GUFI_FIND} -lname 'directory*'"       # glob on directory link name
run_sort "${GUFI_FIND} -lname 'file*'"            # glob on file link name
# shellcheck disable=SC2016
run_no_sort "${GUFI_FIND} -ls" | sed "s/${USER_NAME} ${GROUP_NAME}/${TEST_USER_NAME} ${TEST_GROUP_NAME}/g;" | "${AWK}" '{ if (NF > 10) { $1="0"; $2="0"; $4=1; $7="0"; } print }' | sort -k 11; echo
run_sort "${GUFI_FIND} -maxdepth 2"
run_sort "${GUFI_FIND} -mindepth 3"
run_sort "${GUFI_FIND} -mmin  +0"
run_sort "${GUFI_FIND} -mtime +0"
run_sort "${GUFI_FIND} -name  'directory*'"       # glob on file name
run_sort "${GUFI_FIND} -name  'file*'"            # glob on file name
run_sort "${GUFI_FIND} -newer '${REFERENCE}'"     # missing old_file
run_sort "${GUFI_FIND} -path  '*directory*'"
run_sort "${GUFI_FIND} -readable"
run_sort "${GUFI_FIND} -regex '.*/directory.*'"   # regex on whole path
run_sort "${GUFI_FIND} -regex '.*/file.*'"        # regex on whole path
run_sort "${GUFI_FIND} -samefile '${SRCDIR}/directory/subdirectory'"
run_sort "${GUFI_FIND} -samefile '${SRCDIR}/directory/subdirectory/repeat_name'"
# don't include directories or links because their
# sizes are not consistent across filesystems
run_sort "${GUFI_FIND} -size +1 -size=-3 -type f" # 512 < size < 1536
run_sort "${GUFI_FIND} -size +1024c      -type f"
run_sort "${GUFI_FIND} -size +1c         -type f"
run_sort "${GUFI_FIND} -size 1c          -type f"
run_sort "${GUFI_FIND} -size 2048        -type f" # 512 * 2048 = 1MB
run_sort "${GUFI_FIND} -size=-1c         -type f"
run_sort "${GUFI_FIND} -true"
run_sort "${GUFI_FIND} -type d"
run_sort "${GUFI_FIND} -type f"
run_sort "${GUFI_FIND} -type l"
run_sort "${GUFI_FIND} -writable"

run_no_sort "${GUFI_FIND} -printf ''"

# numerical escape characters
run_no_sort "${GUFI_FIND} -printf '\141 \142 \143' | head -n 1"

# print escape characters
run_no_sort "${GUFI_FIND} -printf '[\\a][ \\b][\f][\\n][\\r][\\t][\v][\\\\\\\\]' -maxdepth 2 -type d"

# spacing
run_sort "${GUFI_FIND} -printf '%-22f %+22f'"

# print results to file
run_sort "${GUFI_FIND} -fprint ${FPRINT} && cat ${FPRINT}"

# bad escapes and directives
run_no_sort "${GUFI_FIND} -printf '%z %z \\z' -maxdepth 2 -type d"

# GUFI specific flags
run_no_sort "${GUFI_FIND} --numresults 5"
run_no_sort "${GUFI_FIND} --smallest -type f"
run_no_sort "${GUFI_FIND} --largest  -type f"

# check the verbose flag
run_no_sort "${GUFI_FIND} --verbose --largest -type f"

# multiple input directories
run_sort "${GUFI_FIND} ${BASENAME}/directory ${BASENAME}/leaf_directory"

run_sort "${GUFI_FIND} -uid   \"${USER_ID}\""   | sed "s/\"${USER_ID}\"/${TEST_USER_ID}/g;"
run_sort "${GUFI_FIND} -user  \"${USER_NAME}\"" | sed "s/\"${USER_NAME}\"/${TEST_USER_NAME}/g;"
run_sort "${GUFI_FIND} -gid   \"${GROUP_ID}\""  | sed "s/\"${GROUP_ID}\"/${TEST_GROUP_ID}/g;"
run_sort "${GUFI_FIND} -group \"${GROUP_NAME}\""| sed "s/\"${GROUP_NAME}\"/${TEST_GROUP_NAME}/g;"

# zero some columns to make test easier
run_no_sort "${GUFI_QUERY} -a -w -E \"UPDATE entries SET inode = 0, uid = 0, gid = 0;\" \"${SEARCH}\""

# %H and %l still need fixing
# shellcheck disable=SC2016
run_no_sort "${GUFI_FIND} -printf \"%% %a %b %c %d %k %g %u %D %f %G %h %i %m %M %n %p %P %s %t %U %y\" -type f" | "${AWK}" '{ if ((NR > 1) && (NF > 8)) { $3=0; $6=0; $7=0; $8=0; } print }' | sort -n -k 2; echo

# path must come before expressions
run_no_sort "${GUFI_FIND} -empty path_after_expression 2>&1 | ${GREP} \"RuntimeError:\""

# bad numerical input
run_no_sort "${GUFI_FIND} -atime abc"

# unknown predicate
run_no_sort "${GUFI_FIND} -unknown-predicate 2>&1 | ${GREP} \"RuntimeError:\""

# skip
run_sort "${GUFI_FIND} --skip \"${SKIP}\""

# bad skip
run_no_sort "${GUFI_FIND} --skip \"${SKIP}.bad\""
) | sed 's+@CMAKE_BINARY_DIR@/++g; s/\,\ line\ [0-9]\+\,/, line n,/g;' | tee "${TEST_OUTPUT}"

"${DIFF}" @CMAKE_CURRENT_BINARY_DIR@/gufi_find.expected "${TEST_OUTPUT}"
rm "${TEST_OUTPUT}"
cleanup
setup_cleanup
