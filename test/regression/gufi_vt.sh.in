#!/usr/bin/env bash
# This file is part of GUFI, which is part of MarFS, which is released
# under the BSD license.
#
#
# Copyright (c) 2017, Los Alamos National Security (LANS), LLC
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation and/or
# other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
# From Los Alamos National Security, LLC:
# LA-CC-15-039
#
# Copyright (c) 2017, Los Alamos National Security, LLC All rights reserved.
# Copyright 2017. Los Alamos National Security, LLC. This software was produced
# under U.S. Government contract DE-AC52-06NA25396 for Los Alamos National
# Laboratory (LANL), which is operated by Los Alamos National Security, LLC for
# the U.S. Department of Energy. The U.S. Government has rights to use,
# reproduce, and distribute this software.  NEITHER THE GOVERNMENT NOR LOS
# ALAMOS NATIONAL SECURITY, LLC MAKES ANY WARRANTY, EXPRESS OR IMPLIED, OR
# ASSUMES ANY LIABILITY FOR THE USE OF THIS SOFTWARE.  If software is
# modified to produce derivative works, such modified software should be
# clearly marked, so as not to confuse it with the version available from
# LANL.
#
# THIS SOFTWARE IS PROVIDED BY LOS ALAMOS NATIONAL SECURITY, LLC AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL LOS ALAMOS NATIONAL SECURITY, LLC OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
# OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
# OF SUCH DAMAGE.



set -e
. @CMAKE_CURRENT_BINARY_DIR@/setup.sh 1

OUTPUT="gufi_vt.out"

BADDIR=$(mktemp -d "${INDEXROOT}.XXXXXX")

cleanup() {
    rm -rf "${BADDIR}"
}

cleanup_exit() {
    cleanup
    setup_cleanup
}

trap cleanup_exit EXIT

cleanup

LOAD=".load @CMAKE_BINARY_DIR@/src/gufi_vt"

query_vt() {
    sql="$1"
    echo "$ ("
    echo "    echo \"${LOAD}\""
    echo "    echo \"${sql}\""
    echo ") | ${SQLITE3}"
    (
        echo "${LOAD}"
        echo "${sql}"
    ) | PATH="@CMAKE_BINARY_DIR@/src:${PATH}" "${SQLITE3}" 2>&1
    echo
}

. "@CMAKE_CURRENT_BINARY_DIR@/gufi_vt.common"

(
    echo "# ######################################"
    echo "# gufi_vt_*"
    run_tests query_vt

    echo "# ######################################"
    echo "# gufi_vt"
    echo
    echo "# Manipulate column without alias"
    query=$(
        echo -n "CREATE VIRTUAL TABLE gufi USING gufi_vt(\"${INDEXROOT}\", E=\"SELECT path() || '/' || name, size FROM pentries;\");"
        echo -n "SELECT size, \"path() || '/' || name\" FROM gufi ORDER BY size ASC, \"path() || '/' || name\" ASC;"
    )
    query_vt "${query}"

    echo "# Manipulate column with alias"
    query=$(
        echo -n "CREATE VIRTUAL TABLE gufi USING gufi_vt(\"${INDEXROOT}\", E=\"SELECT path() || '/' || name AS fullpath, size FROM pentries;\");"
        echo -n "SELECT size, fullpath FROM gufi ORDER BY size ASC, fullpath ASC;"
    )
    query_vt "${query}"

    echo "# S selects more columns than E - S columns get dropped and mapped incorrectly"
    query=$(
        echo -n "CREATE VIRTUAL TABLE gufi USING gufi_vt(\"${INDEXROOT}\", S=\"SELECT * FROM summary;\", E=\"SELECT path() || '/' || name AS fullpath, size FROM pentries;\");"
        echo -n "SELECT size, fullpath FROM gufi ORDER BY size ASC, fullpath ASC;"
    )
    query_vt "${query}"

    echo "# Multiple indexes"
    query=$(
        echo -n "CREATE VIRTUAL TABLE gufi USING gufi_vt(\"${INDEXROOT}\", E=\"SELECT name, size, atime, mtime FROM pentries;\", '${INDEXROOT}', index=\"${INDEXROOT}\", threads=${THREADS}, n=${THREADS});"
        echo -n "SELECT size, atime, mtime, name FROM gufi ORDER BY size ASC, name ASC;"
    )
    query_vt "${query}"

    echo "# Aggregate"
    query=$(
        echo -n "CREATE VIRTUAL TABLE gufi USING gufi_vt(\"${INDEXROOT}\", I=\"CREATE TABLE intermediate (fullpath TEXT, size INT64);\", E=\"INSERT INTO intermediate SELECT path() || '/' || name, size FROM pentries;\", K=\"CREATE TABLE aggregate(fullpath TEXT, size INT64);\", J=\"INSERT INTO aggregate SELECT * FROM intermediate;\", G=\"SELECT * FROM aggregate;\");"
        echo -n "SELECT size, fullpath FROM gufi ORDER BY size ASC, fullpath ASC;"
    )
    query_vt "${query}"

    echo "# xattr view"
    query=$(
        echo -n "CREATE VIRTUAL TABLE gufi USING gufi_vt(\"${INDEXROOT}\", E=\"SELECT path() || '/' || name AS fullpath, xattr_name, xattr_value FROM xpentries;\");"
        echo -n "SELECT * FROM gufi ORDER BY fullpath ASC, xattr_name ASC;"
    )
    query_vt "${query}"

    echo "# Get source paths"
    query=$(
        echo -n "CREATE VIRTUAL TABLE gufi USING gufi_vt(\"${INDEXROOT}\", E=\"SELECT spath(sname, sroll, name) AS srcpath, size FROM vrpentries;\", p=\"source/${SRCDIR}\");"
        echo -n "SELECT size, srcpath FROM gufi ORDER BY size ASC, srcpath ASC;"
    )
    query_vt "${query}"

    echo "# ######################################"
    echo "# errors"

    set +e
    echo "# Missing indexroot (error)"
    query_vt "SELECT name FROM gufi_vt_pentries();"

    echo "# Missing indexroot (error)"
    query_vt "CREATE VIRTUAL TABLE gufi USING gufi_vt();"

    echo "# Bad indexroot"
    rm -rf "${BADDIR}"
    query_vt "SELECT name FROM gufi_vt_pentries('${BADDIR}') ORDER BY name ASC, size ASC;" | @SED@ "s%${BADDIR}%baddir%g;"

    echo "# Empty string thread count (error)"
    query_vt "SELECT name FROM gufi_vt_pentries('${INDEXROOT}', '') ORDER BY name ASC, size ASC;"

    echo "# Zero thread count (error)"
    query_vt "SELECT name FROM gufi_vt_pentries('${INDEXROOT}', 0) ORDER BY name ASC, size ASC;"

    echo "# Bad thread count (error)"
    query_vt "CREATE VIRTUAL TABLE gufi USING gufi_vt('${INDEXROOT}', n=a);"

    echo "# Zero thread count (error)"
    query_vt "CREATE VIRTUAL TABLE gufi USING gufi_vt('${INDEXROOT}', n=0);"

    echo "# Bad E"
    query_vt "CREATE VIRTUAL TABLE gufi USING gufi_vt('${INDEXROOT}', E='');"

    echo "# Bad E"
    query_vt "CREATE VIRTUAL TABLE gufi USING gufi_vt('${INDEXROOT}', E='DELETE FROM entries;');"

    echo "# Bad K"
    query_vt "CREATE VIRTUAL TABLE gufi USING gufi_vt('${INDEXROOT}', K='', G='');"

    echo "# Bad G"
    query_vt "CREATE VIRTUAL TABLE gufi USING gufi_vt('${INDEXROOT}', K='CREATE TABLE aggregate(i INT);', G='SELECT * FROM intermediate');"

    echo "# Missing p"
    query=$(
        echo -n "CREATE VIRTUAL TABLE gufi USING gufi_vt(\"${INDEXROOT}\", E=\"SELECT spath(sname, sroll, name) AS srcpath, size FROM vrpentries;\");"
        echo -n "SELECT size, srcpath FROM gufi ORDER BY size ASC, srcpath ASC;"
    )
    echo "$ ("
    echo "    echo \"${LOAD}\""
    echo "    echo \"${query}\""
    echo ") | ${SQLITE3}"
    (
        echo "${LOAD}"
        echo "${query}"
    ) | PATH="@CMAKE_BINARY_DIR@/src:${PATH}" "${SQLITE3}" 2>&1 | sort
    echo

    set -e
) | replace | tee "${OUTPUT}"

@DIFF@ @CMAKE_CURRENT_BINARY_DIR@/gufi_vt.expected "${OUTPUT}"
rm "${OUTPUT}"
