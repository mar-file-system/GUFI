#!/usr/bin/env bash
# This file is part of GUFI, which is part of MarFS, which is released
# under the BSD license.
#
#
# Copyright (c) 2017, Los Alamos National Security (LANS), LLC
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation and/or
# other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
# From Los Alamos National Security, LLC:
# LA-CC-15-039
#
# Copyright (c) 2017, Los Alamos National Security, LLC All rights reserved.
# Copyright 2017. Los Alamos National Security, LLC. This software was produced
# under U.S. Government contract DE-AC52-06NA25396 for Los Alamos National
# Laboratory (LANL), which is operated by Los Alamos National Security, LLC for
# the U.S. Department of Energy. The U.S. Government has rights to use,
# reproduce, and distribute this software.  NEITHER THE GOVERNMENT NOR LOS
# ALAMOS NATIONAL SECURITY, LLC MAKES ANY WARRANTY, EXPRESS OR IMPLIED, OR
# ASSUMES ANY LIABILITY FOR THE USE OF THIS SOFTWARE.  If software is
# modified to produce derivative works, such modified software should be
# clearly marked, so as not to confuse it with the version available from
# LANL.
#
# THIS SOFTWARE IS PROVIDED BY LOS ALAMOS NATIONAL SECURITY, LLC AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL LOS ALAMOS NATIONAL SECURITY, LLC OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
# OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
# OF SUCH DAMAGE.



set -e
source @CMAKE_CURRENT_BINARY_DIR@/setup.sh "gufi_trace2index" 0

EMPTY_LAST_DIR_TRACE="empty_last_dir.trace"
BIG_DIR_TRACE="big.dir.trace"
BIG_DIR_INDEX="big.dir.index"

cleanup() {
    rm -rf "${EMPTY_LAST_DIR_TRACE}" "${BIG_DIR_TRACE}" "${BIG_DIR_INDEX}"
}

cleanup

(
echo "# ${GUFI_TRACE2INDEX} help" | replace
run_no_sort "${GUFI_TRACE2INDEX}"

# generate the tree
run_no_sort "${GENERATETREE} ${SRCDIR}"

# generate the trace
run_no_sort "${GUFI_DIR2TRACE} -d \"${DELIM}\" -n ${THREADS} -x \"${SRCDIR}\" \"${TRACE}\""

# combine traces into one file because trace might not have lines
cat "${TRACES[@]}" > "${TRACE}"

# add an external db (does not exist on filesystem, so won't show up during comparison)
echo "external_db${DELIM}e${DELIM}" >> "${TRACE}"

# generate the index
run_no_sort "${GUFI_TRACE2INDEX} -d \"${DELIM}\"" "${TRACE}" "\"${SEARCH}\""

# compare contents
src_contents=$(find "${BASENAME}" | sort)
index_contents=$("${GUFI_QUERY}" -d " " -S "SELECT rpath(sname, sroll) FROM vrsummary;" -E "SELECT rpath(sname, sroll) || '/' || name FROM vrpentries;" "${INDEXROOT}" | replace | sort)

echo "Source Directory:"
# shellcheck disable=SC2016
echo "${src_contents}" | "${AWK}" '{ printf "    " $0 "\n" }'
echo
echo "GUFI Index:"
# shellcheck disable=SC2016
echo "${index_contents}" | "${AWK}" '{ printf "    " $0 "\n" }'
echo

# ###########################################################
# big directory (see gufi_trace2index.c)
(
    row=$("${GREP}" "^${BASENAME}/old_file${DELIM}f${DELIM}" "${TRACE}" | awk -F "${DELIM}" -v OFS="${DELIM}" '{ $1="" ; print }')

    "${GREP}" "^${BASENAME}${DELIM}d${DELIM}" "${TRACE}"
    for (( i = 0; i <= 100000; i++ )) # 100K + 1
    do
        echo -n "${BASENAME}/${i}"
        echo "${row}"
    done
) > "${BIG_DIR_TRACE}"

echo "# create index with a directory containing a lot of files "
run_no_sort "${GUFI_TRACE2INDEX} -d \"${DELIM}\"" "${BIG_DIR_TRACE}" "\"${BIG_DIR_INDEX}\""
run_no_sort "${GUFI_QUERY} -d \" \" -E \"SELECT COUNT(*) FROM entries;\" \"${BIG_DIR_INDEX}/${BASENAME}\""
# ###########################################################

(
    cat "${TRACE}"
    "${GREP}" "^.*/empty_directory${DELIM}d${DELIM}.*$" "${TRACE}" | sed 's/empty_directory/empty_directory2/g;'
) > "${EMPTY_LAST_DIR_TRACE}"
echo "# create index from a trace file whose last item is an empty directory"
run_no_sort "${GUFI_TRACE2INDEX} -d \"${DELIM}\" -n ${THREADS} \"${EMPTY_LAST_DIR_TRACE}\" \"${SEARCH}\""

echo "# bad trace path"
run_no_sort "${GUFI_TRACE2INDEX} -d \"${DELIM}\" -n ${THREADS} \"\" \"${SEARCH}\""

echo "# bad index path"
run_no_sort "${GUFI_TRACE2INDEX} -d \"${DELIM}\" -n ${THREADS} \"${TRACE}\" \"${BASENAME}/1KB\" 2> >(sort)"
echo

echo "# empty trace"
true > "${BADTRACE}"
run_no_sort "${GUFI_TRACE2INDEX} -d \"${DELIM}\" -n ${THREADS} \"${BADTRACE}\" \"${SEARCH}\""
echo

echo "# cannot find delimiter of first line"
run_no_sort "${GUFI_TRACE2INDEX} -d \"${BADDELIM}\" -n ${THREADS} \"${TRACE}\" \"${SEARCH}\""
echo

echo "# first line does not start with a directory"
"${GREP}" "^.*${DELIM}f${DELIM}" "${TRACE}" | tail -n -1 > "${BADTRACE}"
run_no_sort "${GUFI_TRACE2INDEX} -d \"${DELIM}\" -n ${THREADS} \"${BADTRACE}\" \"${SEARCH}\""
echo

# generate trace with good directory line and bad file line
# only need the first delimiter to trigger error
(
    # https://stackoverflow.com/a/45018256/341683
    "${GREP}" "^${BASENAME}${DELIM}d${DELIM}.*" "${TRACE}" | sed 's/[0-9]\{1,\}/0/g'
    echo "${BASENAME}/1KB${BADDELIM}f${BADDELIM}"
) > "${BADTRACE}"

echo "# ${BADTRACE}:"
run_no_sort "cat \"${BADTRACE}\""

echo "# file delimiter not found"
run_no_sort "${GUFI_TRACE2INDEX} -d \"${DELIM}\" -n ${THREADS} \"${BADTRACE}\" \"${SEARCH}\""

echo "# bad thread count"
run_no_sort "${GUFI_DIR2TRACE} -n 18446744073709551615 \"${SRCDIR}\" \"${TRACE}\""
) | remove_indexing_time | tee "${TEST_OUTPUT}"

"${DIFF}" @CMAKE_CURRENT_BINARY_DIR@/gufi_trace2index.expected "${TEST_OUTPUT}"
rm "${TEST_OUTPUT}"
cleanup
setup_cleanup
