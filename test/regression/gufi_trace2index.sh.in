#!/usr/bin/env bash
# This file is part of GUFI, which is part of MarFS, which is released
# under the BSD license.
#
#
# Copyright (c) 2017, Los Alamos National Security (LANS), LLC
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation and/or
# other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
# From Los Alamos National Security, LLC:
# LA-CC-15-039
#
# Copyright (c) 2017, Los Alamos National Security, LLC All rights reserved.
# Copyright 2017. Los Alamos National Security, LLC. This software was produced
# under U.S. Government contract DE-AC52-06NA25396 for Los Alamos National
# Laboratory (LANL), which is operated by Los Alamos National Security, LLC for
# the U.S. Department of Energy. The U.S. Government has rights to use,
# reproduce, and distribute this software.  NEITHER THE GOVERNMENT NOR LOS
# ALAMOS NATIONAL SECURITY, LLC MAKES ANY WARRANTY, EXPRESS OR IMPLIED, OR
# ASSUMES ANY LIABILITY FOR THE USE OF THIS SOFTWARE.  If software is
# modified to produce derivative works, such modified software should be
# clearly marked, so as not to confuse it with the version available from
# LANL.
#
# THIS SOFTWARE IS PROVIDED BY LOS ALAMOS NATIONAL SECURITY, LLC AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL LOS ALAMOS NATIONAL SECURITY, LLC OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
# OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
# OF SUCH DAMAGE.



set -e
. @CMAKE_CURRENT_BINARY_DIR@/setup.sh 0

OUTPUT="gufi_trace2index.out"

THREADS=4 # need at least 2 scout threads
TRACES=()
for (( i = 0; i < THREADS; i++ ));
do
    TRACES+=("${TRACE}.${i}")
done

EMPTY_LAST_DIR_TRACE="empty_last_dir.trace"
BIG_DIR_TRACE="big.dir.trace"
BIG_DIR_INDEX="big.dir.index"
DIFFERENT_OWNERS="different_owners.${TRACE}"

cleanup() {
    rm -rf "${TRACES[@]}" "${EMPTY_LAST_DIR_TRACE}" "${BIG_DIR_TRACE}" "${BIG_DIR_INDEX}" "${DIFFERENT_OWNERS}"
}

cleanup_exit() {
    cleanup
    setup_cleanup
}

trap cleanup_exit EXIT

cleanup

(
echo "# ${GUFI_TRACE2INDEX} help" | replace
run_no_sort "${GUFI_TRACE2INDEX}"

echo "# generate the tree"
run_no_sort "${GENERATETREE} ${SRCDIR}"

echo "# generate the trace"
run_no_sort "${GUFI_DIR2TRACE} -d \"${DELIM}\" -n ${THREADS} -x \"${SRCDIR}\" \"${TRACE}\""

# add an external db (does not exist on filesystem, so won't show up during comparison)
# have to add to combined trace to not accidentally end up at top if trace.0 is empty
(
    cat "${TRACES[@]}"
    echo
    echo "external_db${DELIM}e${DELIM}"
) > "${TRACE}"

echo "# generate the index"
run_no_sort "${GUFI_TRACE2INDEX} -d \"${DELIM}\" -n ${THREADS} \"${TRACE}\" \"${SEARCH}\""

echo "# every database should have the same schema"
find "${SEARCH}" -type f -print0 | sort -z | while IFS= read -r -d '' path
do
    echo "${path}"
    "${SQLITE3}" "${path}" ".tables" \;
    echo
done

echo "# compare contents"
src_contents=$(find "${SRCDIR}" | sort)
index_contents=$("${GUFI_QUERY}" -d " " -S "SELECT rpath(sname, sroll) FROM vrsummary;" -E "SELECT rpath(sname, sroll) || '/' || name FROM vrpentries;" "${INDEXROOT}" | replace | sort)

echo "Source Directory:"
# shellcheck disable=SC2016
echo "${src_contents}" | @AWK@ '{ printf "    " $0 "\n" }'
echo
echo "GUFI Index:"
# shellcheck disable=SC2016
echo "${index_contents}" | @AWK@ '{ printf "    " $0 "\n" }'
echo

rm -rf "${SEARCH}"

echo "# read from stdin"
run_no_sort "cat \"${TRACE}\" | ${GUFI_TRACE2INDEX} -d \"${DELIM}\" -n ${THREADS} \"-\" \"${SEARCH}\""

echo "# compare contents"
src_contents=$(find "${SRCDIR}" | sort)
index_contents=$("${GUFI_QUERY}" -d " " -S "SELECT rpath(sname, sroll) FROM vrsummary;" -E "SELECT rpath(sname, sroll) || '/' || name FROM vrpentries;" "${INDEXROOT}" | replace | sort)

echo "Source Directory:"
# shellcheck disable=SC2016
echo "${src_contents}" | @AWK@ '{ printf "    " $0 "\n" }'
echo
echo "GUFI Index:"
# shellcheck disable=SC2016
echo "${index_contents}" | @AWK@ '{ printf "    " $0 "\n" }'
echo

rm -rf "${SEARCH}"

echo "# pipe directly from dir2trace"
run_no_sort "${GUFI_DIR2TRACE} -n ${THREADS} \"${SRCDIR}\" \"-\" 2>/dev/null | ${GUFI_TRACE2INDEX} -n ${THREADS} \"-\" \"${SEARCH}\""

echo "# compare contents"
src_contents=$(find "${SRCDIR}" | sort)
index_contents=$("${GUFI_QUERY}" -d " " -S "SELECT rpath(sname, sroll) FROM vrsummary;" -E "SELECT rpath(sname, sroll) || '/' || name FROM vrpentries;" "${INDEXROOT}" | replace | sort)

echo "Source Directory:"
# shellcheck disable=SC2016
echo "${src_contents}" | @AWK@ '{ printf "    " $0 "\n" }'
echo
echo "GUFI Index:"
# shellcheck disable=SC2016
echo "${index_contents}" | @AWK@ '{ printf "    " $0 "\n" }'
echo

# ###########################################################
# big directory (see gufi_trace2index.c)
(
    # shellcheck disable=SC2016
    row=$(@GREP@ "^${SRCDIR}/old_file${DELIM}f${DELIM}" "${TRACE}" | @AWK@ -F "${DELIM}" -v OFS="${DELIM}" '{ $1="" ; print }')

    @GREP@ "^${SRCDIR}${DELIM}d${DELIM}" "${TRACE}"
    for (( i = 0; i <= 100000; i++ )) # 100K + 1
    do
        echo -n "${SRCDIR}/${i}"
        echo "${row}"
    done
) > "${BIG_DIR_TRACE}"

echo "# create index with a directory containing a lot of files "
run_no_sort "${GUFI_TRACE2INDEX} -d \"${DELIM}\" ${BIG_DIR_TRACE}" "\"${BIG_DIR_INDEX}\""
run_no_sort "${GUFI_QUERY} -d \" \" -E \"SELECT COUNT(*) FROM entries;\" \"${BIG_DIR_INDEX}/${SRCDIR}\""
# ###########################################################

(
    cat "${TRACE}"
    @GREP@ "^.*/empty_directory${DELIM}d${DELIM}.*$" "${TRACE}" | @SED@ 's%empty_directory%empty_directory2%g;'
) > "${EMPTY_LAST_DIR_TRACE}"
echo "# create index from a trace file whose last item is an empty directory"
run_no_sort "${GUFI_TRACE2INDEX} -d \"${DELIM}\" -n ${THREADS} \"${EMPTY_LAST_DIR_TRACE}\" \"${SEARCH}\""

# replace uid and gid with random values
while IFS= read -r line
do
    echo "${line}" | @SED@ "s%$(id -u)${DELIM}$(id -g)%${RANDOM}${DELIM}${RANDOM}%g"
done < "${TRACE}" > "${DIFFERENT_OWNERS}"
echo "# Process trace with different owners"
echo "# Should work when indexed as user and as root"
rm -rf "${SEARCH}"
run_no_sort "${GUFI_TRACE2INDEX} -d \"${DELIM}\" -n ${THREADS} \"${DIFFERENT_OWNERS}\" \"${SEARCH}\"" | @SED@ "\%^Warning.*%d;"
run_sort "${GUFI_QUERY} -d \"${DELIM}\" -n ${THREADS} -S \"SELECT rpath(sname, sroll), uid, gid FROM vrsummary;\" -E \"SELECT rpath(sname, sroll, name), uid, gid FROM vrpentries;\" ${INDEXROOT} | @AWK@ -F \"${DELIM}\" -v OFS=\"${DELIM}\" '{ \$2=\"uid\" ; \$3=\"gid\" ; print }'"

echo "# bad trace path"
run_no_sort "${GUFI_TRACE2INDEX} -d \"${DELIM}\" -n ${THREADS} \"\" \"${SEARCH}\""

echo "# bad index path"
run_no_sort "${GUFI_TRACE2INDEX} -d \"${DELIM}\" -n ${THREADS} \"${TRACE}\" \"${SRCDIR}/1KB\" 2> >(sort)"
echo

echo "# empty trace (no error message)"
true > "${BADTRACE}"
run_no_sort "${GUFI_TRACE2INDEX} -d \"${DELIM}\" -n ${THREADS} \"${BADTRACE}\" \"${SEARCH}\""
echo

echo "# trace with empty line at front"
echo > "${BADTRACE}"
run_no_sort "${GUFI_TRACE2INDEX} -d \"${DELIM}\" -n ${THREADS} \"${BADTRACE}\" \"${SEARCH}\""
echo

echo "# cannot find delimiter of first line"
run_no_sort "${GUFI_TRACE2INDEX} -d \"${BADDELIM}\" -n ${THREADS} \"${TRACE}\" \"${SEARCH}\"" | @SED@ '\%Error: Line at offset %d;'
echo

echo "# first line does not start with a directory"
@GREP@ "^.*${DELIM}f${DELIM}" "${TRACE}" | tail -n -1 > "${BADTRACE}"
run_no_sort "${GUFI_TRACE2INDEX} -d \"${DELIM}\" -n ${THREADS} \"${BADTRACE}\" \"${SEARCH}\""
echo

# generate trace with good directory line and bad file line
# only need the first delimiter to trigger error
(
    @GREP@ "^${SRCDIR}${DELIM}d${DELIM}.*" "${TRACE}" | @SED@ 's%[0-9]\+%0%g;'
    echo "${SRCDIR}/1KB${BADDELIM}f${BADDELIM}"
) > "${BADTRACE}"

echo "# file delimiter not found"
run_no_sort "${GUFI_TRACE2INDEX} -d \"${DELIM}\" -n ${THREADS} \"${BADTRACE}\" \"${SEARCH}\""

echo "# bad thread count"
run_no_sort "${GUFI_TRACE2INDEX} -n 18446744073709551615 \"${SRCDIR}\" \"${SEARCH}\""
) | remove_indexing_time | tee "${OUTPUT}"

@DIFF@ @CMAKE_CURRENT_BINARY_DIR@/gufi_trace2index.expected "${OUTPUT}"
rm "${OUTPUT}"
