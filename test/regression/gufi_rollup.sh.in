#!/usr/bin/env bash
# This file is part of GUFI, which is part of MarFS, which is released
# under the BSD license.
#
#
# Copyright (c) 2017, Los Alamos National Security (LANS), LLC
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation and/or
# other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#
# From Los Alamos National Security, LLC:
# LA-CC-15-039
#
# Copyright (c) 2017, Los Alamos National Security, LLC All rights reserved.
# Copyright 2017. Los Alamos National Security, LLC. This software was produced
# under U.S. Government contract DE-AC52-06NA25396 for Los Alamos National
# Laboratory (LANL), which is operated by Los Alamos National Security, LLC for
# the U.S. Department of Energy. The U.S. Government has rights to use,
# reproduce, and distribute this software.  NEITHER THE GOVERNMENT NOR LOS
# ALAMOS NATIONAL SECURITY, LLC MAKES ANY WARRANTY, EXPRESS OR IMPLIED, OR
# ASSUMES ANY LIABILITY FOR THE USE OF THIS SOFTWARE.  If software is
# modified to produce derivative works, such modified software should be
# clearly marked, so as not to confuse it with the version available from
# LANL.
#
# THIS SOFTWARE IS PROVIDED BY LOS ALAMOS NATIONAL SECURITY, LLC AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL LOS ALAMOS NATIONAL SECURITY, LLC OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
# OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
# OF SUCH DAMAGE.



set -e
. @CMAKE_CURRENT_BINARY_DIR@/rollup_tree.sh

OUTPUT="gufi_rollup.out"

PATH_LIST="path_list"

cleanup() {
    rm -f "${PATH_LIST}"
    rollup_tree_cleanup
}

cleanup_exit() {
    cleanup
    setup_cleanup
}

trap cleanup_exit EXIT

cleanup

(
    echo "directory"
    echo "leaf_directory"
) > "${PATH_LIST}"

(
echo "# ${GUFI_ROLLUP} help" | replace
run_no_sort "${GUFI_ROLLUP}"

do_tests() {
    run_no_sort "${GUFI_QUERY} -d \" \" -S \"SELECT rpath(sname, sroll) FROM vrsummary;\" \"${SEARCH}\" | wc -l | @AWK@ '{ print \$1 }'"
    run_no_sort "${GUFI_QUERY} -d \" \" -E \"SELECT rpath(sname, sroll) || '/' || name FROM vrpentries;\" \"${SEARCH}\" | wc -l | @AWK@ '{ print \$1 }'"
    run_no_sort "${GUFI_QUERY} -d \" \" -S \"SELECT rpath(sname, sroll) FROM vrsummary;\" -E \"SELECT rpath(sname, sroll) || '/' || name FROM vrpentries;\" \"${SEARCH}\" | wc -l | @AWK@ '{ print \$1 }'"

    run_sort "${GUFI_QUERY} -d \" \" -S \"SELECT rpath(sname, sroll), subdirs(srollsubdirs, sroll) FROM vrsummary;\" \"${SEARCH}\""

    run_sort "${GUFI_QUERY} -d \" \" -T \"SELECT rpath(vrsummary.sname, vrsummary.sroll) || ':', 'totalsubdirs:', treesummary.totsubdirs, 'maxsubdirfiles:', treesummary.maxsubdirfiles, 'totfiles:', treesummary.totfiles FROM treesummary, vrsummary WHERE (vrsummary.isroot == 1) AND (treesummary.inode == vrsummary.inode)\" \"${INDEXROOT}\""

    run_no_sort "${GUFI_FIND} -type d | wc -l | @AWK@ '{ print \$1 }'"
    run_no_sort "${GUFI_FIND} -type f | wc -l | @AWK@ '{ print \$1 }'"
    run_no_sort "${GUFI_FIND} | wc -l | @AWK@ '{ print \$1 }'"

    run_no_sort "${GUFI_LS} ${BASENAME}"
    for level1 in "o+rx" "ugo" "ug" "u"
    do
        run_no_sort "${GUFI_LS} ${BASENAME}/${level1}"
        for level2 in "o+rx" "ugo" "ug" "u"
        do
            run_no_sort "${GUFI_LS} ${BASENAME}/${level1}/${level2}"
            for level3 in "dir1" "dir2" "dir3"
            do
                run_no_sort "${GUFI_LS} ${BASENAME}/${level1}/${level2}/${level3}"
            done
        done
    done

    echo "# 1 less because gufi_ls does not list the input dir"
    run_no_sort "${GUFI_LS} -R | wc -l | @AWK@ '{ print \$1 }'"

    run_sort "${GUFI_STATS}    depth ${BASENAME}"
    run_sort "${GUFI_STATS} -r depth ${BASENAME}"

    run_sort "${GUFI_STATS}    filecount ${BASENAME}"
    run_sort "${GUFI_STATS} -r filecount ${BASENAME}"

    run_sort "${GUFI_STATS}    total-filecount ${BASENAME}"
    run_sort "${GUFI_STATS} -c total-filecount ${BASENAME}"

    run_sort "${GUFI_STATS}    dircount ${BASENAME}"
    run_sort "${GUFI_STATS} -r dircount ${BASENAME}"

    run_sort "${GUFI_STATS}    total-dircount ${BASENAME}"
    run_sort "${GUFI_STATS} -c total-dircount ${BASENAME}"
}

"${GUFI_DIR2INDEX}" "${SRCDIR}" "${SEARCH}" 2>&1
"${GUFI_QUERY}" \
    -a 1 \
    -w \
    -S "UPDATE summary SET uid = 0, gid = 0, minuid = 0, maxuid = 0, mingid = 0, maxgid = 0;" \
    -E "UPDATE entries SET uid = 0, gid = 0;" \
    "${SEARCH}"
"${GUFI_ROLLUP}" "${SEARCH}"
do_tests

rm -r "${SEARCH}"

"${GUFI_DIR2INDEX}" "${SRCDIR}" "${SEARCH}" 2>&1
"${GUFI_QUERY}" \
    -a 1 \
    -w \
    -S "UPDATE summary SET uid = 0, gid = 0, minuid = 0, maxuid = 0, mingid = 0, maxgid = 0;" \
    -E "UPDATE entries SET uid = 0, gid = 0;" \
    "${SEARCH}"
"${GUFI_ROLLUP}" --limit 3 "${SEARCH}"
do_tests

rm -rf "${SEARCH}"

"${GENERATETREE}" "${SRCDIR}"
"${GUFI_DIR2INDEX}" "${SRCDIR}" "${SEARCH}" 2>&1

echo "# Partial Rollup up to level 1"
run_no_sort "${GUFI_ROLLUP} --min-level 1 --subtree-list \"${PATH_LIST}\" \"${INDEXROOT}\""

echo "# Check which directories have been rolled up"
run_sort "${GUFI_QUERY} -d \"${DELIM}\" -S \"SELECT rpath(sname, sroll), rollupscore FROM vrsummary\" \"${INDEXROOT}\""

echo "# Full Rollup up to level 1"
run_no_sort "${GUFI_ROLLUP} --min-level 1 \"${INDEXROOT}\""

echo "# Check which directories have been rolled up"
run_sort "${GUFI_QUERY} -d \"${DELIM}\" -S \"SELECT rpath(sname, sroll), rollupscore FROM vrsummary\" \"${INDEXROOT}\""

echo "# Complete rollup using existing data"
run_no_sort "${GUFI_ROLLUP} -l \"${INDEXROOT}\""

echo "# Check which directories have been rolled up"
run_sort "${GUFI_QUERY} -d \"${DELIM}\" -S \"SELECT rpath(sname, sroll), rollupscore FROM vrsummary\" \"${INDEXROOT}\""

echo "# bad thread count"
run_no_sort "${GUFI_ROLLUP} -n 18446744073709551615 \"${SEARCH}\""
) | remove_indexing_time | replace | tee "${OUTPUT}"

@DIFF@ @CMAKE_CURRENT_BINARY_DIR@/gufi_rollup.expected "${OUTPUT}"
rm "${OUTPUT}"
