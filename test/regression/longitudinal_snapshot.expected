# bad flat db path
$ ln -s "prefix" "flattened_index.db"

$ longitudinal_snapshot.py level "prefix" "flattened_index.db" "longitudinal_snapshot.db" --gufi_query="gufi_query" 2>&1 | tail -n 2 | head -n 1
TypeError: "flattened_index.db" is not a regular file

$ rm "flattened_index.db"

# generate good flat db and snapshot db
$ longitudinal_snapshot.py level "prefix" "flattened_index.db" "longitudinal_snapshot.db" --gufi_query="gufi_query" --notes 'test notes' --verbose
GUFI query is
   gufi_query \
    -n 1 \
    -x \
    --min-level 0 \
    --max-level 18446744073709551615 \
    -O flattened_index.db \
    -I 'DROP TABLE IF EXISTS intermediate_treesummary;
              CREATE TABLE intermediate_treesummary(level INT64, inode TEXT, pinode TEXT, totsubdirs INT64, maxsubdirfiles INT64, maxsubdirlinks INT64, maxsubdirsize INT64, totfiles INT64, totlinks INT64, minuid INT64, maxuid INT64, mingid INT64, maxgid INT64, minsize INT64, maxsize INT64, totzero INT64, totltk INT64, totmtk INT64, totltm INT64, totmtm INT64, totmtg INT64, totmtt INT64, totsize INT64, minctime INT64, maxctime INT64, minmtime INT64, maxmtime INT64, minatime INT64, maxatime INT64, minblocks INT64, maxblocks INT64, totxattr INT64, mincrtime INT64, maxcrtime INT64, minossint1 INT64, maxossint1 INT64, totossint1 INT64, minossint2 INT64, maxossint2 INT64, totossint2 INT64, minossint3 INT64, maxossint3 INT64, totossint3 INT64, minossint4 INT64, maxossint4 INT64, totossint4 INT64);
           DROP TABLE IF EXISTS intermediate_summary;
              CREATE TABLE intermediate_summary(level INT64, fs_type BLOB, name_len INT64, inode INT64, mode INT64, nlink INT64, uid INT64, gid INT64, size INT64, blksize INT64, blocks INT64, atime INT64, mtime INT64, ctime INT64, ftime INT64, totfiles INT64, totlinks INT64, totsubdirs INT64, minuid INT64, maxuid INT64, mingid INT64, maxgid INT64, minsize INT64, maxsize INT64, totzero INT64, totltk INT64, totmtk INT64, totltm INT64, totmtm INT64, totmtg INT64, totmtt INT64, totsize INT64, minctime INT64, maxctime INT64, minmtime INT64, maxmtime INT64, minatime INT64, maxatime INT64, minblocks INT64, maxblocks INT64, mincrtime INT64, maxcrtime INT64, minossint1 INT64, maxossint1 INT64, totossint1 INT64, minossint2 INT64, maxossint2 INT64, totossint2 INT64, minossint3 INT64, maxossint3 INT64, totossint3 INT64, minossint4 INT64, maxossint4 INT64, totossint4 INT64, pinode INT64);
           DROP TABLE IF EXISTS intermediate_entries;
              CREATE TABLE intermediate_entries(level INT64, name_len INT64, extension TEXT, type TEXT, inode TEXT, mode INT64, nlink INT64, uid INT64, gid INT64, size INT64, blksize INT64, blocks INT64, atime INT64, mtime INT64, ctime INT64, ftime INT64, linkname_len INT64, crtime INT64, ossint1 INT64, ossint2 INT64, ossint3 INT64, ossint4 INT64, osstext1_len INT64, osstext2_len INT64, pinode TEXT, ppinode TEXT);' \
    -T 'INSERT INTO intermediate_treesummary SELECT CAST(level() + LENGTH(summary.name) - LENGTH(REPLACE(summary.name, '"'"'/'"'"', '"'"''"'"')) AS INT64), CAST(treesummary.inode AS TEXT), CAST(treesummary.pinode AS TEXT), CAST(treesummary.totsubdirs AS INT64), CAST(treesummary.maxsubdirfiles AS INT64), CAST(treesummary.maxsubdirlinks AS INT64), CAST(treesummary.maxsubdirsize AS INT64), CAST(treesummary.totfiles AS INT64), CAST(treesummary.totlinks AS INT64), CAST(treesummary.minuid AS INT64), CAST(treesummary.maxuid AS INT64), CAST(treesummary.mingid AS INT64), CAST(treesummary.maxgid AS INT64), CAST(treesummary.minsize AS INT64), CAST(treesummary.maxsize AS INT64), CAST(treesummary.totzero AS INT64), CAST(treesummary.totltk AS INT64), CAST(treesummary.totmtk AS INT64), CAST(treesummary.totltm AS INT64), CAST(treesummary.totmtm AS INT64), CAST(treesummary.totmtg AS INT64), CAST(treesummary.totmtt AS INT64), CAST(treesummary.totsize AS INT64), CAST(treesummary.minctime AS INT64), CAST(treesummary.maxctime AS INT64), CAST(treesummary.minmtime AS INT64), CAST(treesummary.maxmtime AS INT64), CAST(treesummary.minatime AS INT64), CAST(treesummary.maxatime AS INT64), CAST(treesummary.minblocks AS INT64), CAST(treesummary.maxblocks AS INT64), CAST(treesummary.totxattr AS INT64), CAST(treesummary.mincrtime AS INT64), CAST(treesummary.maxcrtime AS INT64), CAST(treesummary.minossint1 AS INT64), CAST(treesummary.maxossint1 AS INT64), CAST(treesummary.totossint1 AS INT64), CAST(treesummary.minossint2 AS INT64), CAST(treesummary.maxossint2 AS INT64), CAST(treesummary.totossint2 AS INT64), CAST(treesummary.minossint3 AS INT64), CAST(treesummary.maxossint3 AS INT64), CAST(treesummary.totossint3 AS INT64), CAST(treesummary.minossint4 AS INT64), CAST(treesummary.maxossint4 AS INT64), CAST(treesummary.totossint4 AS INT64) FROM summary LEFT JOIN treesummary ON summary.inode == treesummary.inode; SELECT 1;' \
    -S 'INSERT INTO intermediate_summary SELECT CAST(level() + LENGTH(name) - LENGTH(REPLACE(name, '"'"'/'"'"', '"'"''"'"')) AS INT64), CAST(NULL AS BLOB), CAST(LENGTH(basename(name)) AS INT64), CAST(inode AS INT64), CAST(mode AS INT64), CAST(nlink AS INT64), CAST(uid AS INT64), CAST(gid AS INT64), CAST(size AS INT64), CAST(blksize AS INT64), CAST(blocks AS INT64), CAST(atime AS INT64), CAST(mtime AS INT64), CAST(ctime AS INT64), CAST(atime - mtime AS INT64), CAST(totfiles AS INT64), CAST(totlinks AS INT64), CAST(subdirs(srollsubdirs, sroll) AS INT64), CAST(minuid AS INT64), CAST(maxuid AS INT64), CAST(mingid AS INT64), CAST(maxgid AS INT64), CAST(minsize AS INT64), CAST(maxsize AS INT64), CAST(totzero AS INT64), CAST(totltk AS INT64), CAST(totmtk AS INT64), CAST(totltm AS INT64), CAST(totmtm AS INT64), CAST(totmtg AS INT64), CAST(totmtt AS INT64), CAST(totsize AS INT64), CAST(minctime AS INT64), CAST(maxctime AS INT64), CAST(minmtime AS INT64), CAST(maxmtime AS INT64), CAST(minatime AS INT64), CAST(maxatime AS INT64), CAST(minblocks AS INT64), CAST(maxblocks AS INT64), CAST(mincrtime AS INT64), CAST(maxcrtime AS INT64), CAST(minossint1 AS INT64), CAST(maxossint1 AS INT64), CAST(totossint1 AS INT64), CAST(minossint2 AS INT64), CAST(maxossint2 AS INT64), CAST(totossint2 AS INT64), CAST(minossint3 AS INT64), CAST(maxossint3 AS INT64), CAST(totossint3 AS INT64), CAST(minossint4 AS INT64), CAST(maxossint4 AS INT64), CAST(totossint4 AS INT64), CAST(pinode AS INT64) FROM vrxsummary GROUP BY inode; SELECT 1;' \
    -E 'INSERT INTO intermediate_entries SELECT CAST(level() + LENGTH(sname) - LENGTH(REPLACE(sname, '"'"'/'"'"', '"'"''"'"')) AS INT64), CAST(LENGTH(name) AS INT64), CAST(
                                 CASE WHEN name LIKE '"'"'%.%'"'"' THEN
                                     REPLACE(name, RTRIM(name, REPLACE(name, '"'"'.'"'"', '"'"''"'"')), '"'"''"'"')
                                 ELSE
                                     NULL
                                 END
                                  AS TEXT), CAST(type AS TEXT), CAST(inode AS TEXT), CAST(mode AS INT64), CAST(nlink AS INT64), CAST(uid AS INT64), CAST(gid AS INT64), CAST(size AS INT64), CAST(blksize AS INT64), CAST(blocks AS INT64), CAST(atime AS INT64), CAST(mtime AS INT64), CAST(ctime AS INT64), CAST(atime - mtime AS INT64), CAST(
                                 CASE WHEN type == '"'"'l'"'"' THEN
                                     LENGTH(linkname)
                                 ELSE
                                     NULL
                                 END
                                  AS INT64), CAST(crtime AS INT64), CAST(ossint1 AS INT64), CAST(ossint2 AS INT64), CAST(ossint3 AS INT64), CAST(ossint4 AS INT64), CAST(LENGTH(osstext1) AS INT64), CAST(LENGTH(osstext2) AS INT64), CAST(pinode AS TEXT), CAST(ppinode AS TEXT) FROM vrxpentries GROUP BY inode; SELECT 1;' \
    -K 'DROP TABLE IF EXISTS treesummary;
              CREATE TABLE treesummary(level INT64, inode TEXT, pinode TEXT, totsubdirs INT64, maxsubdirfiles INT64, maxsubdirlinks INT64, maxsubdirsize INT64, totfiles INT64, totlinks INT64, minuid INT64, maxuid INT64, mingid INT64, maxgid INT64, minsize INT64, maxsize INT64, totzero INT64, totltk INT64, totmtk INT64, totltm INT64, totmtm INT64, totmtg INT64, totmtt INT64, totsize INT64, minctime INT64, maxctime INT64, minmtime INT64, maxmtime INT64, minatime INT64, maxatime INT64, minblocks INT64, maxblocks INT64, totxattr INT64, mincrtime INT64, maxcrtime INT64, minossint1 INT64, maxossint1 INT64, totossint1 INT64, minossint2 INT64, maxossint2 INT64, totossint2 INT64, minossint3 INT64, maxossint3 INT64, totossint3 INT64, minossint4 INT64, maxossint4 INT64, totossint4 INT64);
           DROP TABLE IF EXISTS summary;
              CREATE TABLE summary(level INT64, fs_type BLOB, name_len INT64, inode INT64, mode INT64, nlink INT64, uid INT64, gid INT64, size INT64, blksize INT64, blocks INT64, atime INT64, mtime INT64, ctime INT64, ftime INT64, totfiles INT64, totlinks INT64, totsubdirs INT64, minuid INT64, maxuid INT64, mingid INT64, maxgid INT64, minsize INT64, maxsize INT64, totzero INT64, totltk INT64, totmtk INT64, totltm INT64, totmtm INT64, totmtg INT64, totmtt INT64, totsize INT64, minctime INT64, maxctime INT64, minmtime INT64, maxmtime INT64, minatime INT64, maxatime INT64, minblocks INT64, maxblocks INT64, mincrtime INT64, maxcrtime INT64, minossint1 INT64, maxossint1 INT64, totossint1 INT64, minossint2 INT64, maxossint2 INT64, totossint2 INT64, minossint3 INT64, maxossint3 INT64, totossint3 INT64, minossint4 INT64, maxossint4 INT64, totossint4 INT64, pinode INT64);
           DROP TABLE IF EXISTS entries;
              CREATE TABLE entries(level INT64, name_len INT64, extension TEXT, type TEXT, inode TEXT, mode INT64, nlink INT64, uid INT64, gid INT64, size INT64, blksize INT64, blocks INT64, atime INT64, mtime INT64, ctime INT64, ftime INT64, linkname_len INT64, crtime INT64, ossint1 INT64, ossint2 INT64, ossint3 INT64, ossint4 INT64, osstext1_len INT64, osstext2_len INT64, pinode TEXT, ppinode TEXT, extension_len INT64);' \
    -J 'INSERT INTO treesummary SELECT level, inode, pinode, totsubdirs, maxsubdirfiles, maxsubdirlinks, maxsubdirsize, totfiles, totlinks, minuid, maxuid, mingid, maxgid, minsize, maxsize, totzero, totltk, totmtk, totltm, totmtm, totmtg, totmtt, totsize, minctime, maxctime, minmtime, maxmtime, minatime, maxatime, minblocks, maxblocks, totxattr, mincrtime, maxcrtime, minossint1, maxossint1, totossint1, minossint2, maxossint2, totossint2, minossint3, maxossint3, totossint3, minossint4, maxossint4, totossint4 FROM intermediate_treesummary;
           INSERT INTO summary SELECT level, fs_type, name_len, inode, mode, nlink, uid, gid, size, blksize, blocks, atime, mtime, ctime, ftime, totfiles, totlinks, totsubdirs, minuid, maxuid, mingid, maxgid, minsize, maxsize, totzero, totltk, totmtk, totltm, totmtm, totmtg, totmtt, totsize, minctime, maxctime, minmtime, maxmtime, minatime, maxatime, minblocks, maxblocks, mincrtime, maxcrtime, minossint1, maxossint1, totossint1, minossint2, maxossint2, totossint2, minossint3, maxossint3, totossint3, minossint4, maxossint4, totossint4, pinode FROM intermediate_summary;
           INSERT INTO entries SELECT level, name_len, extension, type, inode, mode, nlink, uid, gid, size, blksize, blocks, atime, mtime, ctime, ftime, linkname_len, crtime, ossint1, ossint2, ossint3, ossint4, osstext1_len, osstext2_len, pinode, ppinode, LENGTH(extension) FROM intermediate_entries; ' \
    prefix
gufi_sqlite3 \
    "longitudinal_snapshot.db" \
    "ATTACH 'file:flattened_index.db?mode=ro' AS flatdb;" \
    "DROP TABLE IF EXISTS main.treesummary; CREATE TABLE main.treesummary AS SELECT level, inode, pinode, CAST(SUM(totsubdirs) AS INT64) AS totsubdirs, CAST(MAX(maxsubdirfiles) AS INT64) AS maxsubdirfiles, CAST(MAX(maxsubdirlinks) AS INT64) AS maxsubdirlinks, CAST(MAX(maxsubdirsize) AS INT64) AS maxsubdirsize, CAST(SUM(totfiles) AS INT64) AS totfiles, CAST(SUM(totlinks) AS INT64) AS totlinks, CAST(MIN(minuid) AS INT64) AS minuid, CAST(MAX(maxuid) AS INT64) AS maxuid, CAST(MIN(mingid) AS INT64) AS mingid, CAST(MAX(maxgid) AS INT64) AS maxgid, CAST(MIN(minsize) AS INT64) AS minsize, CAST(MAX(maxsize) AS INT64) AS maxsize, CAST(SUM(totzero) AS INT64) AS totzero, CAST(SUM(totltk) AS INT64) AS totltk, CAST(SUM(totmtk) AS INT64) AS totmtk, CAST(SUM(totltm) AS INT64) AS totltm, CAST(SUM(totmtm) AS INT64) AS totmtm, CAST(SUM(totmtg) AS INT64) AS totmtg, CAST(SUM(totmtt) AS INT64) AS totmtt, CAST(SUM(totsize) AS INT64) AS totsize, CAST(MIN(minctime) AS INT64) AS minctime, CAST(MAX(maxctime) AS INT64) AS maxctime, CAST(MIN(minmtime) AS INT64) AS minmtime, CAST(MAX(maxmtime) AS INT64) AS maxmtime, CAST(MIN(minatime) AS INT64) AS minatime, CAST(MAX(maxatime) AS INT64) AS maxatime, CAST(MIN(minblocks) AS INT64) AS minblocks, CAST(MAX(maxblocks) AS INT64) AS maxblocks, CAST(SUM(totxattr) AS INT64) AS totxattr, CAST(MIN(mincrtime) AS INT64) AS mincrtime, CAST(MAX(maxcrtime) AS INT64) AS maxcrtime, CAST(MIN(minossint1) AS INT64) AS minossint1, CAST(MAX(maxossint1) AS INT64) AS maxossint1, CAST(SUM(totossint1) AS INT64) AS totossint1, CAST(MIN(minossint2) AS INT64) AS minossint2, CAST(MAX(maxossint2) AS INT64) AS maxossint2, CAST(SUM(totossint2) AS INT64) AS totossint2, CAST(MIN(minossint3) AS INT64) AS minossint3, CAST(MAX(maxossint3) AS INT64) AS maxossint3, CAST(SUM(totossint3) AS INT64) AS totossint3, CAST(MIN(minossint4) AS INT64) AS minossint4, CAST(MAX(maxossint4) AS INT64) AS maxossint4, CAST(SUM(totossint4) AS INT64) AS totossint4 FROM treesummary GROUP BY level" \
    "DROP TABLE IF EXISTS main.summary; CREATE TABLE main.summary AS SELECT level, inode, pinode, fs_type, CAST(MIN(name_len) AS INT64) AS name_len_min, CAST(MAX(name_len) AS INT64) AS name_len_max, CAST(AVG(name_len) AS DOUBLE) AS name_len_mean, CAST(median(name_len) AS DOUBLE) AS name_len_median, CAST(mode_count(name_len) AS TEXT) AS name_len_mode, CAST(stdevp(name_len) AS DOUBLE) AS name_len_stdev, CAST(log_hist(name_len, 2, 8) AS TEXT) AS name_len_hist, CAST(mode_hist(mode) AS TEXT) AS mode_hist, CAST(COUNT(DISTINCT mode) AS INT64) AS mode_num_unique, CAST(MIN(nlink) AS INT64) AS nlink_min, CAST(MAX(nlink) AS INT64) AS nlink_max, CAST(AVG(nlink) AS DOUBLE) AS nlink_mean, CAST(median(nlink) AS DOUBLE) AS nlink_median, CAST(mode_count(nlink) AS TEXT) AS nlink_mode, CAST(stdevp(nlink) AS DOUBLE) AS nlink_stdev, CAST(MIN(uid) AS INT64) AS uid_min, CAST(MAX(uid) AS INT64) AS uid_max, CAST(mode_count(uid) AS TEXT) AS uid_mode_count, CAST(category_hist(CAST(uid AS TEXT), 1) AS TEXT) AS uid_hist, CAST(COUNT(DISTINCT uid) AS INT64) AS uid_num_unique, CAST(MIN(gid) AS INT64) AS gid_min, CAST(MAX(gid) AS INT64) AS gid_max, CAST(mode_count(gid) AS TEXT) AS gid_mode_count, CAST(category_hist(CAST(gid AS TEXT), 1) AS TEXT) AS gid_hist, CAST(COUNT(DISTINCT gid) AS INT64) AS gid_num_unique, CAST(MIN(size) AS INT64) AS size_min, CAST(MAX(size) AS INT64) AS size_max, CAST(AVG(size) AS DOUBLE) AS size_mean, CAST(median(size) AS DOUBLE) AS size_median, CAST(mode_count(size) AS TEXT) AS size_mode, CAST(stdevp(size) AS DOUBLE) AS size_stdev, CAST(log_hist(size, 2, 50) AS TEXT) AS size_hist, CAST(MIN(blksize) AS INT64) AS blksize_min, CAST(MAX(blksize) AS INT64) AS blksize_max, CAST(AVG(blksize) AS DOUBLE) AS blksize_mean, CAST(median(blksize) AS DOUBLE) AS blksize_median, CAST(mode_count(blksize) AS TEXT) AS blksize_mode, CAST(stdevp(blksize) AS DOUBLE) AS blksize_stdev, CAST(log_hist(blksize, 2, 50) AS TEXT) AS blksize_hist, CAST(MIN(blocks) AS INT64) AS blocks_min, CAST(MAX(blocks) AS INT64) AS blocks_max, CAST(AVG(blocks) AS DOUBLE) AS blocks_mean, CAST(median(blocks) AS DOUBLE) AS blocks_median, CAST(mode_count(blocks) AS TEXT) AS blocks_mode, CAST(stdevp(blocks) AS DOUBLE) AS blocks_stdev, CAST(log_hist(blocks, 2, 50) AS TEXT) AS blocks_hist, CAST(MIN(atime) AS INT64) AS atime_min, CAST(MAX(atime) AS INT64) AS atime_max, CAST(AVG(atime) AS DOUBLE) AS atime_mean, CAST(median(atime) AS DOUBLE) AS atime_median, CAST(mode_count(atime) AS TEXT) AS atime_mode, CAST(stdevp(atime) AS DOUBLE) AS atime_stdev, CAST(time_hist(atime, now) AS TEXT) AS atime_age_hist, CAST(category_hist(CAST(strftime('%H', atime) AS TEXT), 1) AS TEXT) AS atime_hour_hist, CAST(MIN(mtime) AS INT64) AS mtime_min, CAST(MAX(mtime) AS INT64) AS mtime_max, CAST(AVG(mtime) AS DOUBLE) AS mtime_mean, CAST(median(mtime) AS DOUBLE) AS mtime_median, CAST(mode_count(mtime) AS TEXT) AS mtime_mode, CAST(stdevp(mtime) AS DOUBLE) AS mtime_stdev, CAST(time_hist(mtime, now) AS TEXT) AS mtime_age_hist, CAST(category_hist(CAST(strftime('%H', mtime) AS TEXT), 1) AS TEXT) AS mtime_hour_hist, CAST(MIN(ctime) AS INT64) AS ctime_min, CAST(MAX(ctime) AS INT64) AS ctime_max, CAST(AVG(ctime) AS DOUBLE) AS ctime_mean, CAST(median(ctime) AS DOUBLE) AS ctime_median, CAST(mode_count(ctime) AS TEXT) AS ctime_mode, CAST(stdevp(ctime) AS DOUBLE) AS ctime_stdev, CAST(time_hist(ctime, now) AS TEXT) AS ctime_age_hist, CAST(category_hist(CAST(strftime('%H', ctime) AS TEXT), 1) AS TEXT) AS ctime_hour_hist, CAST(MIN(ftime) AS INT64) AS ftime_min, CAST(MAX(ftime) AS INT64) AS ftime_max, CAST(AVG(ftime) AS DOUBLE) AS ftime_mean, CAST(median(ftime) AS DOUBLE) AS ftime_median, CAST(mode_count(ftime) AS TEXT) AS ftime_mode, CAST(stdevp(ftime) AS DOUBLE) AS ftime_stdev, CAST(SUM(CAST(1 AS INT64)) AS INT64) AS totdirs, CAST(SUM(CAST(totsubdirs AS INT64)) AS INT64) AS totsubdirs, CAST(MIN(CAST(totfiles AS INT64)) AS INT64) AS minfiles, CAST(MAX(CAST(totfiles AS INT64)) AS INT64) AS maxfiles, CAST(SUM(CAST(totfiles AS INT64)) AS INT64) AS totfiles, CAST(MIN(CAST(totlinks AS INT64)) AS INT64) AS minlinks, CAST(MAX(CAST(totlinks AS INT64)) AS INT64) AS maxlinks, CAST(SUM(CAST(totlinks AS INT64)) AS INT64) AS totlinks, CAST(MIN(CAST(minuid AS INT64)) AS INT64) AS minuid, CAST(MAX(CAST(maxuid AS INT64)) AS INT64) AS maxuid, CAST(MIN(CAST(mingid AS INT64)) AS INT64) AS mingid, CAST(MAX(CAST(maxgid AS INT64)) AS INT64) AS maxgid, CAST(MIN(CAST(minsize AS INT64)) AS INT64) AS minsize, CAST(MAX(CAST(maxsize AS INT64)) AS INT64) AS maxsize, CAST(SUM(CAST(totzero AS INT64)) AS INT64) AS totzero, CAST(SUM(CAST(totltk AS INT64)) AS INT64) AS totltk, CAST(SUM(CAST(totmtk AS INT64)) AS INT64) AS totmtk, CAST(SUM(CAST(totltm AS INT64)) AS INT64) AS totltm, CAST(SUM(CAST(totmtm AS INT64)) AS INT64) AS totmtm, CAST(SUM(CAST(totmtg AS INT64)) AS INT64) AS totmtg, CAST(SUM(CAST(totmtt AS INT64)) AS INT64) AS totmtt, CAST(SUM(CAST(totsize AS INT64)) AS INT64) AS totsize, CAST(MIN(CAST(minctime AS INT64)) AS INT64) AS minctime, CAST(MAX(CAST(maxctime AS INT64)) AS INT64) AS maxctime, CAST(MIN(CAST(minmtime AS INT64)) AS INT64) AS minmtime, CAST(MAX(CAST(maxmtime AS INT64)) AS INT64) AS maxmtime, CAST(MIN(CAST(minatime AS INT64)) AS INT64) AS minatime, CAST(MAX(CAST(maxatime AS INT64)) AS INT64) AS maxatime, CAST(MIN(CAST(minblocks AS INT64)) AS INT64) AS minblocks, CAST(MAX(CAST(maxblocks AS INT64)) AS INT64) AS maxblocks, CAST(MIN(CAST(mincrtime AS INT64)) AS INT64) AS mincrtime, CAST(MAX(CAST(maxcrtime AS INT64)) AS INT64) AS maxcrtime, CAST(MIN(CAST(minossint1 AS INT64)) AS INT64) AS minossint1, CAST(MAX(CAST(maxossint1 AS INT64)) AS INT64) AS maxossint1, CAST(SUM(CAST(totossint1 AS INT64)) AS INT64) AS totossint1, CAST(MIN(CAST(minossint2 AS INT64)) AS INT64) AS minossint2, CAST(MAX(CAST(maxossint2 AS INT64)) AS INT64) AS maxossint2, CAST(SUM(CAST(totossint2 AS INT64)) AS INT64) AS totossint2, CAST(MIN(CAST(minossint3 AS INT64)) AS INT64) AS minossint3, CAST(MAX(CAST(maxossint3 AS INT64)) AS INT64) AS maxossint3, CAST(SUM(CAST(totossint3 AS INT64)) AS INT64) AS totossint3, CAST(MIN(CAST(minossint4 AS INT64)) AS INT64) AS minossint4, CAST(MAX(CAST(maxossint4 AS INT64)) AS INT64) AS maxossint4, CAST(SUM(CAST(totossint4 AS INT64)) AS INT64) AS totossint4 FROM summary GROUP BY level" \
    "DROP TABLE IF EXISTS main.entries; CREATE TABLE main.entries AS SELECT level, pinode AS inode, ppinode AS pinode, CAST(MIN(uid) AS INT64) AS uid_min, CAST(MAX(uid) AS INT64) AS uid_max, CAST(mode_count(uid) AS TEXT) AS uid_mode_count, CAST(category_hist(CAST(uid AS TEXT), 1) AS TEXT) AS uid_hist, CAST(COUNT(DISTINCT uid) AS INT64) AS uid_num_unique, CAST(MIN(gid) AS INT64) AS gid_min, CAST(MAX(gid) AS INT64) AS gid_max, CAST(mode_count(gid) AS TEXT) AS gid_mode_count, CAST(category_hist(CAST(gid AS TEXT), 1) AS TEXT) AS gid_hist, CAST(COUNT(DISTINCT gid) AS INT64) AS gid_num_unique, CAST(MIN(size) AS INT64) AS size_min, CAST(MAX(size) AS INT64) AS size_max, CAST(AVG(size) AS DOUBLE) AS size_mean, CAST(median(size) AS DOUBLE) AS size_median, CAST(mode_count(size) AS TEXT) AS size_mode, CAST(stdevp(size) AS DOUBLE) AS size_stdev, CAST(log_hist(size, 2, 50) AS TEXT) AS size_hist, CAST(SUM(size) AS INT64) AS size_total, CAST(mode_hist(mode) AS TEXT) AS mode_hist, CAST(COUNT(DISTINCT mode) AS INT64) AS mode_num_unique, CAST(MIN(ctime) AS INT64) AS ctime_min, CAST(MAX(ctime) AS INT64) AS ctime_max, CAST(AVG(ctime) AS DOUBLE) AS ctime_mean, CAST(median(ctime) AS DOUBLE) AS ctime_median, CAST(mode_count(ctime) AS TEXT) AS ctime_mode, CAST(stdevp(ctime) AS DOUBLE) AS ctime_stdev, CAST(time_hist(ctime, now) AS TEXT) AS ctime_age_hist, CAST(category_hist(CAST(strftime('%H', ctime) AS TEXT), 1) AS TEXT) AS ctime_hour_hist, CAST(MIN(atime) AS INT64) AS atime_min, CAST(MAX(atime) AS INT64) AS atime_max, CAST(AVG(atime) AS DOUBLE) AS atime_mean, CAST(median(atime) AS DOUBLE) AS atime_median, CAST(mode_count(atime) AS TEXT) AS atime_mode, CAST(stdevp(atime) AS DOUBLE) AS atime_stdev, CAST(time_hist(atime, now) AS TEXT) AS atime_age_hist, CAST(category_hist(CAST(strftime('%H', atime) AS TEXT), 1) AS TEXT) AS atime_hour_hist, CAST(MIN(mtime) AS INT64) AS mtime_min, CAST(MAX(mtime) AS INT64) AS mtime_max, CAST(AVG(mtime) AS DOUBLE) AS mtime_mean, CAST(median(mtime) AS DOUBLE) AS mtime_median, CAST(mode_count(mtime) AS TEXT) AS mtime_mode, CAST(stdevp(mtime) AS DOUBLE) AS mtime_stdev, CAST(time_hist(mtime, now) AS TEXT) AS mtime_age_hist, CAST(category_hist(CAST(strftime('%H', mtime) AS TEXT), 1) AS TEXT) AS mtime_hour_hist, CAST(MIN(crtime) AS INT64) AS crtime_min, CAST(MAX(crtime) AS INT64) AS crtime_max, CAST(AVG(crtime) AS DOUBLE) AS crtime_mean, CAST(median(crtime) AS DOUBLE) AS crtime_median, CAST(mode_count(crtime) AS TEXT) AS crtime_mode, CAST(stdevp(crtime) AS DOUBLE) AS crtime_stdev, CAST(time_hist(crtime, now) AS TEXT) AS crtime_age_hist, CAST(category_hist(CAST(strftime('%H', crtime) AS TEXT), 1) AS TEXT) AS crtime_hour_hist, CAST(MIN(ftime) AS INT64) AS ftime_min, CAST(MAX(ftime) AS INT64) AS ftime_max, CAST(AVG(ftime) AS DOUBLE) AS ftime_mean, CAST(median(ftime) AS DOUBLE) AS ftime_median, CAST(mode_count(ftime) AS TEXT) AS ftime_mode, CAST(stdevp(ftime) AS DOUBLE) AS ftime_stdev, CAST(MIN(name_len) AS INT64) AS name_len_min, CAST(MAX(name_len) AS INT64) AS name_len_max, CAST(AVG(name_len) AS DOUBLE) AS name_len_mean, CAST(median(name_len) AS DOUBLE) AS name_len_median, CAST(mode_count(name_len) AS TEXT) AS name_len_mode, CAST(stdevp(name_len) AS DOUBLE) AS name_len_stdev, CAST(log_hist(name_len, 2, 8) AS TEXT) AS name_len_hist, CAST(MIN(linkname_len) AS INT64) AS linkname_len_min, CAST(MAX(linkname_len) AS INT64) AS linkname_len_max, CAST(AVG(linkname_len) AS DOUBLE) AS linkname_len_mean, CAST(median(linkname_len) AS DOUBLE) AS linkname_len_median, CAST(mode_count(linkname_len) AS TEXT) AS linkname_len_mode, CAST(stdevp(linkname_len) AS DOUBLE) AS linkname_len_stdev, CAST(log_hist(linkname_len, 2, 8) AS TEXT) AS linkname_len_hist, CAST(category_hist(CAST(extension AS TEXT), 1) AS TEXT) AS extension_hist, CAST(COUNT(DISTINCT extension) AS INT64) AS extension_num_unique, CAST(MIN(extension_len) AS INT64) AS extension_len_min, CAST(MAX(extension_len) AS INT64) AS extension_len_max, CAST(AVG(extension_len) AS DOUBLE) AS extension_len_mean, CAST(median(extension_len) AS DOUBLE) AS extension_len_median, CAST(mode_count(extension_len) AS TEXT) AS extension_len_mode, CAST(stdevp(extension_len) AS DOUBLE) AS extension_len_stdev, CAST(log_hist(extension_len, 2, 8) AS TEXT) AS extension_len_hist FROM entries GROUP BY level" \
    "
    CREATE VIEW snapshot
    AS
      SELECT *
      FROM   (SELECT level, inode, pinode, fs_type, name_len_min AS dir_name_len_min, name_len_max AS dir_name_len_max, name_len_mean AS dir_name_len_mean, name_len_median AS dir_name_len_median, name_len_mode AS dir_name_len_mode, name_len_stdev AS dir_name_len_stdev, name_len_hist AS dir_name_len_hist, mode_hist AS dir_mode_hist, mode_num_unique AS dir_mode_num_unique, nlink_min AS dir_nlink_min, nlink_max AS dir_nlink_max, nlink_mean AS dir_nlink_mean, nlink_median AS dir_nlink_median, nlink_mode AS dir_nlink_mode, nlink_stdev AS dir_nlink_stdev, uid_min AS dir_uid_min, uid_max AS dir_uid_max, uid_mode_count AS dir_uid_mode_count, uid_hist AS dir_uid_hist, uid_num_unique AS dir_uid_num_unique, gid_min AS dir_gid_min, gid_max AS dir_gid_max, gid_mode_count AS dir_gid_mode_count, gid_hist AS dir_gid_hist, gid_num_unique AS dir_gid_num_unique, size_min AS dir_size_min, size_max AS dir_size_max, size_mean AS dir_size_mean, size_median AS dir_size_median, size_mode AS dir_size_mode, size_stdev AS dir_size_stdev, size_hist AS dir_size_hist, blksize_min AS dir_blksize_min, blksize_max AS dir_blksize_max, blksize_mean AS dir_blksize_mean, blksize_median AS dir_blksize_median, blksize_mode AS dir_blksize_mode, blksize_stdev AS dir_blksize_stdev, blksize_hist AS dir_blksize_hist, blocks_min AS dir_blocks_min, blocks_max AS dir_blocks_max, blocks_mean AS dir_blocks_mean, blocks_median AS dir_blocks_median, blocks_mode AS dir_blocks_mode, blocks_stdev AS dir_blocks_stdev, blocks_hist AS dir_blocks_hist, atime_min AS dir_atime_min, atime_max AS dir_atime_max, atime_mean AS dir_atime_mean, atime_median AS dir_atime_median, atime_mode AS dir_atime_mode, atime_stdev AS dir_atime_stdev, atime_age_hist AS dir_atime_age_hist, atime_hour_hist AS dir_atime_hour_hist, mtime_min AS dir_mtime_min, mtime_max AS dir_mtime_max, mtime_mean AS dir_mtime_mean, mtime_median AS dir_mtime_median, mtime_mode AS dir_mtime_mode, mtime_stdev AS dir_mtime_stdev, mtime_age_hist AS dir_mtime_age_hist, mtime_hour_hist AS dir_mtime_hour_hist, ctime_min AS dir_ctime_min, ctime_max AS dir_ctime_max, ctime_mean AS dir_ctime_mean, ctime_median AS dir_ctime_median, ctime_mode AS dir_ctime_mode, ctime_stdev AS dir_ctime_stdev, ctime_age_hist AS dir_ctime_age_hist, ctime_hour_hist AS dir_ctime_hour_hist, ftime_min AS dir_ftime_min, ftime_max AS dir_ftime_max, ftime_mean AS dir_ftime_mean, ftime_median AS dir_ftime_median, ftime_mode AS dir_ftime_mode, ftime_stdev AS dir_ftime_stdev, totdirs, totsubdirs, minfiles, maxfiles, totfiles, minlinks, maxlinks, totlinks, minuid, maxuid, mingid, maxgid, minsize, maxsize, totzero, totltk, totmtk, totltm, totmtm, totmtg, totmtt, totsize, minctime, maxctime, minmtime, maxmtime, minatime, maxatime, minblocks, maxblocks, mincrtime, maxcrtime, minossint1, maxossint1, totossint1, minossint2, maxossint2, totossint2, minossint3, maxossint3, totossint3, minossint4, maxossint4, totossint4 FROM summary GROUP BY level) AS sum
             LEFT JOIN entries
                    ON sum.level == entries.level
             LEFT JOIN (SELECT level, inode, pinode, totsubdirs AS tsum_totsubdirs, maxsubdirfiles AS tsum_maxsubdirfiles, maxsubdirlinks AS tsum_maxsubdirlinks, maxsubdirsize AS tsum_maxsubdirsize, totfiles AS tsum_totfiles, totlinks AS tsum_totlinks, minuid AS tsum_minuid, maxuid AS tsum_maxuid, mingid AS tsum_mingid, maxgid AS tsum_maxgid, minsize AS tsum_minsize, maxsize AS tsum_maxsize, totzero AS tsum_totzero, totltk AS tsum_totltk, totmtk AS tsum_totmtk, totltm AS tsum_totltm, totmtm AS tsum_totmtm, totmtg AS tsum_totmtg, totmtt AS tsum_totmtt, totsize AS tsum_totsize, minctime AS tsum_minctime, maxctime AS tsum_maxctime, minmtime AS tsum_minmtime, maxmtime AS tsum_maxmtime, minatime AS tsum_minatime, maxatime AS tsum_maxatime, minblocks AS tsum_minblocks, maxblocks AS tsum_maxblocks, totxattr AS tsum_totxattr, mincrtime AS tsum_mincrtime, maxcrtime AS tsum_maxcrtime, minossint1 AS tsum_minossint1, maxossint1 AS tsum_maxossint1, totossint1 AS tsum_totossint1, minossint2 AS tsum_minossint2, maxossint2 AS tsum_maxossint2, totossint2 AS tsum_totossint2, minossint3 AS tsum_minossint3, maxossint3 AS tsum_maxossint3, totossint3 AS tsum_totossint3, minossint4 AS tsum_minossint4, maxossint4 AS tsum_maxossint4, totossint4 AS tsum_totossint4 FROM treesummary) AS tsum
                    ON sum.level == tsum.level"

# running without replacing snapshot db will error because the tables already exist
$ longitudinal_snapshot.py level "prefix" "flattened_index.db" "longitudinal_snapshot.db" --gufi_query="gufi_query" --notes 'test notes'
Error: SQL error: view snapshot already exists

# running with snapshot db replacement will overwrite the previous data
$ longitudinal_snapshot.py level "prefix" "flattened_index.db" "longitudinal_snapshot.db" --gufi_query="gufi_query" --notes 'test notes' --replace-outdb

$ sqlite3 "longitudinal_snapshot.db" ".tables"
entries      metadata     snapshot     summary      treesummary

$ sqlite3 "longitudinal_snapshot.db" "PRAGMA TABLE_INFO(metadata);"
0|timestamp|INT|0||0
1|src|TEXT|0||0
2|notes|TEXT|0||0

$ sqlite3 "longitudinal_snapshot.db" "PRAGMA TABLE_INFO(entries);"
0|level|INT|0||0
1|inode|TEXT|0||0
2|pinode|TEXT|0||0
3|uid_min|INT|0||0
4|uid_max|INT|0||0
5|uid_mode_count|TEXT|0||0
6|uid_hist|TEXT|0||0
7|uid_num_unique|INT|0||0
8|gid_min|INT|0||0
9|gid_max|INT|0||0
10|gid_mode_count|TEXT|0||0
11|gid_hist|TEXT|0||0
12|gid_num_unique|INT|0||0
13|size_min|INT|0||0
14|size_max|INT|0||0
15|size_mean|REAL|0||0
16|size_median|REAL|0||0
17|size_mode|TEXT|0||0
18|size_stdev|REAL|0||0
19|size_hist|TEXT|0||0
20|size_total|INT|0||0
21|mode_hist|TEXT|0||0
22|mode_num_unique|INT|0||0
23|ctime_min|INT|0||0
24|ctime_max|INT|0||0
25|ctime_mean|REAL|0||0
26|ctime_median|REAL|0||0
27|ctime_mode|TEXT|0||0
28|ctime_stdev|REAL|0||0
29|ctime_age_hist|TEXT|0||0
30|ctime_hour_hist|TEXT|0||0
31|atime_min|INT|0||0
32|atime_max|INT|0||0
33|atime_mean|REAL|0||0
34|atime_median|REAL|0||0
35|atime_mode|TEXT|0||0
36|atime_stdev|REAL|0||0
37|atime_age_hist|TEXT|0||0
38|atime_hour_hist|TEXT|0||0
39|mtime_min|INT|0||0
40|mtime_max|INT|0||0
41|mtime_mean|REAL|0||0
42|mtime_median|REAL|0||0
43|mtime_mode|TEXT|0||0
44|mtime_stdev|REAL|0||0
45|mtime_age_hist|TEXT|0||0
46|mtime_hour_hist|TEXT|0||0
47|crtime_min|INT|0||0
48|crtime_max|INT|0||0
49|crtime_mean|REAL|0||0
50|crtime_median|REAL|0||0
51|crtime_mode|TEXT|0||0
52|crtime_stdev|REAL|0||0
53|crtime_age_hist|TEXT|0||0
54|crtime_hour_hist|TEXT|0||0
55|ftime_min|INT|0||0
56|ftime_max|INT|0||0
57|ftime_mean|REAL|0||0
58|ftime_median|REAL|0||0
59|ftime_mode|TEXT|0||0
60|ftime_stdev|REAL|0||0
61|name_len_min|INT|0||0
62|name_len_max|INT|0||0
63|name_len_mean|REAL|0||0
64|name_len_median|REAL|0||0
65|name_len_mode|TEXT|0||0
66|name_len_stdev|REAL|0||0
67|name_len_hist|TEXT|0||0
68|linkname_len_min|INT|0||0
69|linkname_len_max|INT|0||0
70|linkname_len_mean|REAL|0||0
71|linkname_len_median|REAL|0||0
72|linkname_len_mode|TEXT|0||0
73|linkname_len_stdev|REAL|0||0
74|linkname_len_hist|TEXT|0||0
75|extension_hist|TEXT|0||0
76|extension_num_unique|INT|0||0
77|extension_len_min|INT|0||0
78|extension_len_max|INT|0||0
79|extension_len_mean|REAL|0||0
80|extension_len_median|REAL|0||0
81|extension_len_mode|TEXT|0||0
82|extension_len_stdev|REAL|0||0
83|extension_len_hist|TEXT|0||0

$ sqlite3 "longitudinal_snapshot.db" "PRAGMA TABLE_INFO(summary);"
0|level|INT|0||0
1|inode|INT|0||0
2|pinode|INT|0||0
3|fs_type||0||0
4|name_len_min|INT|0||0
5|name_len_max|INT|0||0
6|name_len_mean|REAL|0||0
7|name_len_median|REAL|0||0
8|name_len_mode|TEXT|0||0
9|name_len_stdev|REAL|0||0
10|name_len_hist|TEXT|0||0
11|mode_hist|TEXT|0||0
12|mode_num_unique|INT|0||0
13|nlink_min|INT|0||0
14|nlink_max|INT|0||0
15|nlink_mean|REAL|0||0
16|nlink_median|REAL|0||0
17|nlink_mode|TEXT|0||0
18|nlink_stdev|REAL|0||0
19|uid_min|INT|0||0
20|uid_max|INT|0||0
21|uid_mode_count|TEXT|0||0
22|uid_hist|TEXT|0||0
23|uid_num_unique|INT|0||0
24|gid_min|INT|0||0
25|gid_max|INT|0||0
26|gid_mode_count|TEXT|0||0
27|gid_hist|TEXT|0||0
28|gid_num_unique|INT|0||0
29|size_min|INT|0||0
30|size_max|INT|0||0
31|size_mean|REAL|0||0
32|size_median|REAL|0||0
33|size_mode|TEXT|0||0
34|size_stdev|REAL|0||0
35|size_hist|TEXT|0||0
36|blksize_min|INT|0||0
37|blksize_max|INT|0||0
38|blksize_mean|REAL|0||0
39|blksize_median|REAL|0||0
40|blksize_mode|TEXT|0||0
41|blksize_stdev|REAL|0||0
42|blksize_hist|TEXT|0||0
43|blocks_min|INT|0||0
44|blocks_max|INT|0||0
45|blocks_mean|REAL|0||0
46|blocks_median|REAL|0||0
47|blocks_mode|TEXT|0||0
48|blocks_stdev|REAL|0||0
49|blocks_hist|TEXT|0||0
50|atime_min|INT|0||0
51|atime_max|INT|0||0
52|atime_mean|REAL|0||0
53|atime_median|REAL|0||0
54|atime_mode|TEXT|0||0
55|atime_stdev|REAL|0||0
56|atime_age_hist|TEXT|0||0
57|atime_hour_hist|TEXT|0||0
58|mtime_min|INT|0||0
59|mtime_max|INT|0||0
60|mtime_mean|REAL|0||0
61|mtime_median|REAL|0||0
62|mtime_mode|TEXT|0||0
63|mtime_stdev|REAL|0||0
64|mtime_age_hist|TEXT|0||0
65|mtime_hour_hist|TEXT|0||0
66|ctime_min|INT|0||0
67|ctime_max|INT|0||0
68|ctime_mean|REAL|0||0
69|ctime_median|REAL|0||0
70|ctime_mode|TEXT|0||0
71|ctime_stdev|REAL|0||0
72|ctime_age_hist|TEXT|0||0
73|ctime_hour_hist|TEXT|0||0
74|ftime_min|INT|0||0
75|ftime_max|INT|0||0
76|ftime_mean|REAL|0||0
77|ftime_median|REAL|0||0
78|ftime_mode|TEXT|0||0
79|ftime_stdev|REAL|0||0
80|totdirs|INT|0||0
81|totsubdirs|INT|0||0
82|minfiles|INT|0||0
83|maxfiles|INT|0||0
84|totfiles|INT|0||0
85|minlinks|INT|0||0
86|maxlinks|INT|0||0
87|totlinks|INT|0||0
88|minuid|INT|0||0
89|maxuid|INT|0||0
90|mingid|INT|0||0
91|maxgid|INT|0||0
92|minsize|INT|0||0
93|maxsize|INT|0||0
94|totzero|INT|0||0
95|totltk|INT|0||0
96|totmtk|INT|0||0
97|totltm|INT|0||0
98|totmtm|INT|0||0
99|totmtg|INT|0||0
100|totmtt|INT|0||0
101|totsize|INT|0||0
102|minctime|INT|0||0
103|maxctime|INT|0||0
104|minmtime|INT|0||0
105|maxmtime|INT|0||0
106|minatime|INT|0||0
107|maxatime|INT|0||0
108|minblocks|INT|0||0
109|maxblocks|INT|0||0
110|mincrtime|INT|0||0
111|maxcrtime|INT|0||0
112|minossint1|INT|0||0
113|maxossint1|INT|0||0
114|totossint1|INT|0||0
115|minossint2|INT|0||0
116|maxossint2|INT|0||0
117|totossint2|INT|0||0
118|minossint3|INT|0||0
119|maxossint3|INT|0||0
120|totossint3|INT|0||0
121|minossint4|INT|0||0
122|maxossint4|INT|0||0
123|totossint4|INT|0||0

$ sqlite3 "longitudinal_snapshot.db" "PRAGMA TABLE_INFO(treesummary);"
0|level|INT|0||0
1|inode|TEXT|0||0
2|pinode|TEXT|0||0
3|totsubdirs|INT|0||0
4|maxsubdirfiles|INT|0||0
5|maxsubdirlinks|INT|0||0
6|maxsubdirsize|INT|0||0
7|totfiles|INT|0||0
8|totlinks|INT|0||0
9|minuid|INT|0||0
10|maxuid|INT|0||0
11|mingid|INT|0||0
12|maxgid|INT|0||0
13|minsize|INT|0||0
14|maxsize|INT|0||0
15|totzero|INT|0||0
16|totltk|INT|0||0
17|totmtk|INT|0||0
18|totltm|INT|0||0
19|totmtm|INT|0||0
20|totmtg|INT|0||0
21|totmtt|INT|0||0
22|totsize|INT|0||0
23|minctime|INT|0||0
24|maxctime|INT|0||0
25|minmtime|INT|0||0
26|maxmtime|INT|0||0
27|minatime|INT|0||0
28|maxatime|INT|0||0
29|minblocks|INT|0||0
30|maxblocks|INT|0||0
31|totxattr|INT|0||0
32|mincrtime|INT|0||0
33|maxcrtime|INT|0||0
34|minossint1|INT|0||0
35|maxossint1|INT|0||0
36|totossint1|INT|0||0
37|minossint2|INT|0||0
38|maxossint2|INT|0||0
39|totossint2|INT|0||0
40|minossint3|INT|0||0
41|maxossint3|INT|0||0
42|totossint3|INT|0||0
43|minossint4|INT|0||0
44|maxossint4|INT|0||0
45|totossint4|INT|0||0

$ sqlite3 "longitudinal_snapshot.db" "PRAGMA TABLE_INFO(snapshot);"
0|level|INT|0||0
1|inode|INT|0||0
2|pinode|INT|0||0
3|fs_type|BLOB|0||0
4|dir_name_len_min|INT|0||0
5|dir_name_len_max|INT|0||0
6|dir_name_len_mean|REAL|0||0
7|dir_name_len_median|REAL|0||0
8|dir_name_len_mode|TEXT|0||0
9|dir_name_len_stdev|REAL|0||0
10|dir_name_len_hist|TEXT|0||0
11|dir_mode_hist|TEXT|0||0
12|dir_mode_num_unique|INT|0||0
13|dir_nlink_min|INT|0||0
14|dir_nlink_max|INT|0||0
15|dir_nlink_mean|REAL|0||0
16|dir_nlink_median|REAL|0||0
17|dir_nlink_mode|TEXT|0||0
18|dir_nlink_stdev|REAL|0||0
19|dir_uid_min|INT|0||0
20|dir_uid_max|INT|0||0
21|dir_uid_mode_count|TEXT|0||0
22|dir_uid_hist|TEXT|0||0
23|dir_uid_num_unique|INT|0||0
24|dir_gid_min|INT|0||0
25|dir_gid_max|INT|0||0
26|dir_gid_mode_count|TEXT|0||0
27|dir_gid_hist|TEXT|0||0
28|dir_gid_num_unique|INT|0||0
29|dir_size_min|INT|0||0
30|dir_size_max|INT|0||0
31|dir_size_mean|REAL|0||0
32|dir_size_median|REAL|0||0
33|dir_size_mode|TEXT|0||0
34|dir_size_stdev|REAL|0||0
35|dir_size_hist|TEXT|0||0
36|dir_blksize_min|INT|0||0
37|dir_blksize_max|INT|0||0
38|dir_blksize_mean|REAL|0||0
39|dir_blksize_median|REAL|0||0
40|dir_blksize_mode|TEXT|0||0
41|dir_blksize_stdev|REAL|0||0
42|dir_blksize_hist|TEXT|0||0
43|dir_blocks_min|INT|0||0
44|dir_blocks_max|INT|0||0
45|dir_blocks_mean|REAL|0||0
46|dir_blocks_median|REAL|0||0
47|dir_blocks_mode|TEXT|0||0
48|dir_blocks_stdev|REAL|0||0
49|dir_blocks_hist|TEXT|0||0
50|dir_atime_min|INT|0||0
51|dir_atime_max|INT|0||0
52|dir_atime_mean|REAL|0||0
53|dir_atime_median|REAL|0||0
54|dir_atime_mode|TEXT|0||0
55|dir_atime_stdev|REAL|0||0
56|dir_atime_age_hist|TEXT|0||0
57|dir_atime_hour_hist|TEXT|0||0
58|dir_mtime_min|INT|0||0
59|dir_mtime_max|INT|0||0
60|dir_mtime_mean|REAL|0||0
61|dir_mtime_median|REAL|0||0
62|dir_mtime_mode|TEXT|0||0
63|dir_mtime_stdev|REAL|0||0
64|dir_mtime_age_hist|TEXT|0||0
65|dir_mtime_hour_hist|TEXT|0||0
66|dir_ctime_min|INT|0||0
67|dir_ctime_max|INT|0||0
68|dir_ctime_mean|REAL|0||0
69|dir_ctime_median|REAL|0||0
70|dir_ctime_mode|TEXT|0||0
71|dir_ctime_stdev|REAL|0||0
72|dir_ctime_age_hist|TEXT|0||0
73|dir_ctime_hour_hist|TEXT|0||0
74|dir_ftime_min|INT|0||0
75|dir_ftime_max|INT|0||0
76|dir_ftime_mean|REAL|0||0
77|dir_ftime_median|REAL|0||0
78|dir_ftime_mode|TEXT|0||0
79|dir_ftime_stdev|REAL|0||0
80|totdirs|INT|0||0
81|totsubdirs|INT|0||0
82|minfiles|INT|0||0
83|maxfiles|INT|0||0
84|totfiles|INT|0||0
85|minlinks|INT|0||0
86|maxlinks|INT|0||0
87|totlinks|INT|0||0
88|minuid|INT|0||0
89|maxuid|INT|0||0
90|mingid|INT|0||0
91|maxgid|INT|0||0
92|minsize|INT|0||0
93|maxsize|INT|0||0
94|totzero|INT|0||0
95|totltk|INT|0||0
96|totmtk|INT|0||0
97|totltm|INT|0||0
98|totmtm|INT|0||0
99|totmtg|INT|0||0
100|totmtt|INT|0||0
101|totsize|INT|0||0
102|minctime|INT|0||0
103|maxctime|INT|0||0
104|minmtime|INT|0||0
105|maxmtime|INT|0||0
106|minatime|INT|0||0
107|maxatime|INT|0||0
108|minblocks|INT|0||0
109|maxblocks|INT|0||0
110|mincrtime|INT|0||0
111|maxcrtime|INT|0||0
112|minossint1|INT|0||0
113|maxossint1|INT|0||0
114|totossint1|INT|0||0
115|minossint2|INT|0||0
116|maxossint2|INT|0||0
117|totossint2|INT|0||0
118|minossint3|INT|0||0
119|maxossint3|INT|0||0
120|totossint3|INT|0||0
121|minossint4|INT|0||0
122|maxossint4|INT|0||0
123|totossint4|INT|0||0
124|level:1|INT|0||0
125|inode:1|TEXT|0||0
126|pinode:1|TEXT|0||0
127|uid_min|INT|0||0
128|uid_max|INT|0||0
129|uid_mode_count|TEXT|0||0
130|uid_hist|TEXT|0||0
131|uid_num_unique|INT|0||0
132|gid_min|INT|0||0
133|gid_max|INT|0||0
134|gid_mode_count|TEXT|0||0
135|gid_hist|TEXT|0||0
136|gid_num_unique|INT|0||0
137|size_min|INT|0||0
138|size_max|INT|0||0
139|size_mean|REAL|0||0
140|size_median|REAL|0||0
141|size_mode|TEXT|0||0
142|size_stdev|REAL|0||0
143|size_hist|TEXT|0||0
144|size_total|INT|0||0
145|mode_hist|TEXT|0||0
146|mode_num_unique|INT|0||0
147|ctime_min|INT|0||0
148|ctime_max|INT|0||0
149|ctime_mean|REAL|0||0
150|ctime_median|REAL|0||0
151|ctime_mode|TEXT|0||0
152|ctime_stdev|REAL|0||0
153|ctime_age_hist|TEXT|0||0
154|ctime_hour_hist|TEXT|0||0
155|atime_min|INT|0||0
156|atime_max|INT|0||0
157|atime_mean|REAL|0||0
158|atime_median|REAL|0||0
159|atime_mode|TEXT|0||0
160|atime_stdev|REAL|0||0
161|atime_age_hist|TEXT|0||0
162|atime_hour_hist|TEXT|0||0
163|mtime_min|INT|0||0
164|mtime_max|INT|0||0
165|mtime_mean|REAL|0||0
166|mtime_median|REAL|0||0
167|mtime_mode|TEXT|0||0
168|mtime_stdev|REAL|0||0
169|mtime_age_hist|TEXT|0||0
170|mtime_hour_hist|TEXT|0||0
171|crtime_min|INT|0||0
172|crtime_max|INT|0||0
173|crtime_mean|REAL|0||0
174|crtime_median|REAL|0||0
175|crtime_mode|TEXT|0||0
176|crtime_stdev|REAL|0||0
177|crtime_age_hist|TEXT|0||0
178|crtime_hour_hist|TEXT|0||0
179|ftime_min|INT|0||0
180|ftime_max|INT|0||0
181|ftime_mean|REAL|0||0
182|ftime_median|REAL|0||0
183|ftime_mode|TEXT|0||0
184|ftime_stdev|REAL|0||0
185|name_len_min|INT|0||0
186|name_len_max|INT|0||0
187|name_len_mean|REAL|0||0
188|name_len_median|REAL|0||0
189|name_len_mode|TEXT|0||0
190|name_len_stdev|REAL|0||0
191|name_len_hist|TEXT|0||0
192|linkname_len_min|INT|0||0
193|linkname_len_max|INT|0||0
194|linkname_len_mean|REAL|0||0
195|linkname_len_median|REAL|0||0
196|linkname_len_mode|TEXT|0||0
197|linkname_len_stdev|REAL|0||0
198|linkname_len_hist|TEXT|0||0
199|extension_hist|TEXT|0||0
200|extension_num_unique|INT|0||0
201|extension_len_min|INT|0||0
202|extension_len_max|INT|0||0
203|extension_len_mean|REAL|0||0
204|extension_len_median|REAL|0||0
205|extension_len_mode|TEXT|0||0
206|extension_len_stdev|REAL|0||0
207|extension_len_hist|TEXT|0||0
208|level:2|INT|0||0
209|inode:2|TEXT|0||0
210|pinode:2|TEXT|0||0
211|tsum_totsubdirs|INT|0||0
212|tsum_maxsubdirfiles|INT|0||0
213|tsum_maxsubdirlinks|INT|0||0
214|tsum_maxsubdirsize|INT|0||0
215|tsum_totfiles|INT|0||0
216|tsum_totlinks|INT|0||0
217|tsum_minuid|INT|0||0
218|tsum_maxuid|INT|0||0
219|tsum_mingid|INT|0||0
220|tsum_maxgid|INT|0||0
221|tsum_minsize|INT|0||0
222|tsum_maxsize|INT|0||0
223|tsum_totzero|INT|0||0
224|tsum_totltk|INT|0||0
225|tsum_totmtk|INT|0||0
226|tsum_totltm|INT|0||0
227|tsum_totmtm|INT|0||0
228|tsum_totmtg|INT|0||0
229|tsum_totmtt|INT|0||0
230|tsum_totsize|INT|0||0
231|tsum_minctime|INT|0||0
232|tsum_maxctime|INT|0||0
233|tsum_minmtime|INT|0||0
234|tsum_maxmtime|INT|0||0
235|tsum_minatime|INT|0||0
236|tsum_maxatime|INT|0||0
237|tsum_minblocks|INT|0||0
238|tsum_maxblocks|INT|0||0
239|tsum_totxattr|INT|0||0
240|tsum_mincrtime|INT|0||0
241|tsum_maxcrtime|INT|0||0
242|tsum_minossint1|INT|0||0
243|tsum_maxossint1|INT|0||0
244|tsum_totossint1|INT|0||0
245|tsum_minossint2|INT|0||0
246|tsum_maxossint2|INT|0||0
247|tsum_totossint2|INT|0||0
248|tsum_minossint3|INT|0||0
249|tsum_maxossint3|INT|0||0
250|tsum_totossint3|INT|0||0
251|tsum_minossint4|INT|0||0
252|tsum_maxossint4|INT|0||0
253|tsum_totossint4|INT|0||0

$ sqlite3 "longitudinal_snapshot.db" "SELECT notes FROM metadata;"
test notes

# flattened_index.db does not exist

$ longitudinal_snapshot.py graph "prefix" "flattened_index.db" "longitudinal_snapshot.db" --gufi_query="gufi_query" --notes 'test notes'

$ sqlite3 "longitudinal_snapshot.db" "SELECT COUNT(*) FROM metadata;"
1

$ sqlite3 "longitudinal_snapshot.db" "SELECT COUNT(*) FROM entries;"
1

$ sqlite3 "longitudinal_snapshot.db" "SELECT COUNT(*) FROM summary;"
1

$ sqlite3 "longitudinal_snapshot.db" "SELECT COUNT(*) FROM treesummary;"
1

$ sqlite3 "longitudinal_snapshot.db" "SELECT COUNT(*) FROM snapshot;"
1

$ sqlite3 "longitudinal_snapshot.db" "SELECT NULL, totsize, tsum_totsize, totdirs, totsubdirs, totfiles, tsum_totfiles, totlinks, tsum_totlinks FROM snapshot ORDER BY NULL ASC;"
|1049673|1049727|6|5|12|20|2|4

# flattened_index.db already exists

$ longitudinal_snapshot.py level "prefix" "flattened_index.db" "longitudinal_snapshot.db" --gufi_query="gufi_query" --notes 'test notes'

$ sqlite3 "longitudinal_snapshot.db" "SELECT COUNT(*) FROM metadata;"
1

$ sqlite3 "longitudinal_snapshot.db" "SELECT COUNT(*) FROM entries;"
3

$ sqlite3 "longitudinal_snapshot.db" "SELECT COUNT(*) FROM summary;"
3

$ sqlite3 "longitudinal_snapshot.db" "SELECT COUNT(*) FROM treesummary;"
3

$ sqlite3 "longitudinal_snapshot.db" "SELECT COUNT(*) FROM snapshot;"
3

$ sqlite3 "longitudinal_snapshot.db" "SELECT CAST(level AS INT), totsize, tsum_totsize, totdirs, totsubdirs, totfiles, tsum_totfiles, totlinks, tsum_totlinks FROM snapshot ORDER BY CAST(level AS INT) ASC;"
0|1049624|1049673|1|4|5|12|1|2
1|44|49|4|1|6|7|0|1
2|5|5|1|0|1|1|1|1

# flattened_index.db already exists

$ longitudinal_snapshot.py pinode "prefix" "flattened_index.db" "longitudinal_snapshot.db" --gufi_query="gufi_query" --notes 'test notes'

$ sqlite3 "longitudinal_snapshot.db" "SELECT COUNT(*) FROM metadata;"
1

$ sqlite3 "longitudinal_snapshot.db" "SELECT COUNT(*) FROM entries;"
3

$ sqlite3 "longitudinal_snapshot.db" "SELECT COUNT(*) FROM summary;"
3

$ sqlite3 "longitudinal_snapshot.db" "SELECT COUNT(*) FROM treesummary;"
3

$ sqlite3 "longitudinal_snapshot.db" "SELECT COUNT(*) FROM snapshot;"
3

$ sqlite3 "longitudinal_snapshot.db" "SELECT CAST(pinode AS INT), totsize, tsum_totsize, totdirs, totsubdirs, totfiles, tsum_totfiles, totlinks, tsum_totlinks FROM snapshot ORDER BY CAST(pinode AS INT) ASC;"
7|5|5|1|0|1|1|1|1
17|44|49|4|1|6|7|0|1
18|1049624|1049673|1|4|5|12|1|2

# flattened_index.db already exists

$ longitudinal_snapshot.py inode "prefix" "flattened_index.db" "longitudinal_snapshot.db" --gufi_query="gufi_query" --notes 'test notes'

$ sqlite3 "longitudinal_snapshot.db" "SELECT COUNT(*) FROM metadata;"
1

$ sqlite3 "longitudinal_snapshot.db" "SELECT COUNT(*) FROM entries;"
5

$ sqlite3 "longitudinal_snapshot.db" "SELECT COUNT(*) FROM summary;"
6

$ sqlite3 "longitudinal_snapshot.db" "SELECT COUNT(*) FROM treesummary;"
6

$ sqlite3 "longitudinal_snapshot.db" "SELECT COUNT(*) FROM snapshot;"
6

$ sqlite3 "longitudinal_snapshot.db" "SELECT CAST(inode AS INT), totsize, tsum_totsize, totdirs, totsubdirs, totfiles, tsum_totfiles, totlinks, tsum_totlinks FROM snapshot ORDER BY CAST(inode AS INT) ASC;"
7|6|11|1|1|3|4|0|1
8|0|0|1|0|0|0|0|0
13|23|23|1|0|2|2|0|0
16|15|15|1|0|1|1|0|0
17|1049624|1049673|1|4|5|12|1|2
6|5|5|1|0|1|1|1|1

# flattened_index.db:

$ sqlite3 "flattened_index.db" ".tables"
entries      summary      treesummary

$ sqlite3 "flattened_index.db" "SELECT COUNT(*) FROM entries;"
14

$ sqlite3 "flattened_index.db" "SELECT COUNT(*) FROM entries WHERE type == 'f';"
12

$ sqlite3 "flattened_index.db" "SELECT COUNT(*) FROM summary;"
6

$ sqlite3 "flattened_index.db" "SELECT COUNT(*) FROM treesummary;"
6

