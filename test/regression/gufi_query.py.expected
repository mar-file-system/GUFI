# gufi_query.py help
$ gufi_query.py -h
usage: gufi_query [options] GUFI_tree ...
options:
  -h                     help
  -H                     show assigned input values (debugging)
  -v                     version
  -T <SQL_tsum>          SQL for tree-summary table
  -S <SQL_sum>           SQL for summary table
  -E <SQL_ent>           SQL for entries table
  -a <0|1|2>             0 - if returned row, run next SQL, else stop (continue descent) (default)
                         1 - skip T, run S and E whether or not a row was returned (old -a)
                         2 - run T, S, and E whether or not a row was returned
  -n <threads>           number of threads
  -j                     print the information in terse form
  -o <out_fname>         output file (one-per-thread, with thread-id suffix)
  -d <delim>             delimiter (one char)  [use 'x' for 0x1E]
  -O <out_DB>            output DB
  -u                     prefix row with 1 int column count and each column with 1 octet type and 1 size_t length
  -I <SQL_init>          SQL init
  -F <SQL_fin>           SQL cleanup
  -y <min level>         minimum level to go down
  -z <max level>         maximum level to go down
  -J <SQL_interm>        SQL for intermediate results
  -K <create aggregate>  SQL to create the final aggregation table
  -G <SQL_aggregate>     SQL for aggregated results
  -m                     Keep mtime and atime same on the database files
  -B <buffer size>       size of each thread's output buffer in bytes
  -w                     open the database files in read-write mode instead of read only mode
  -x                     index/query xattrs
  -k <filename>          file containing directory names to skip
  -M <bytes>             target memory footprint
  -s <path>              File name prefix for swap files
  -p <path>              Source path prefix for %s in SQL
  -e                     compress work items
  -Q <basename>
     <table>
     <template>.<table>
     <view>              External database file basename, per-attach table name, template + table name, and the resultant view
  -D <filename>          File containing paths at single level to index (not including starting path). Must also use -y

GUFI_tree        find GUFI tree here


# Walk without returning results
$ gufi_query.py

# Get only directories
$ gufi_query.py -d " " -n 2 -S "SELECT name FROM vrsummary;"
directory
empty_directory
leaf_directory
prefix
subdirectory
unusual#? directory ,

# Get only non-directories
$ gufi_query.py -d " " -n 2 -E "SELECT name FROM vrpentries;"
.hidden
1KB
1MB
directory_symlink
executable
file_symlink
leaf_file1
leaf_file2
old_file
readonly
repeat_name
repeat_name
unusual, name?#
writable

# Get all directory and non-directory names
$ gufi_query.py -d " " -n 2 -S "SELECT name FROM vrsummary;" -E "SELECT name FROM vrpentries;"
.hidden
1KB
1MB
directory
directory_symlink
empty_directory
executable
file_symlink
leaf_directory
leaf_file1
leaf_file2
old_file
prefix
readonly
repeat_name
repeat_name
subdirectory
unusual#? directory ,
unusual, name?#
writable

