#!/bin/bash -e

# This file is part of GUFI, which is part of MarFS, which is released
# under the BSD license.
#
#
# Copyright (c) 2017, Los Alamos National Security (LANS), LLC
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation and/or
# other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors
# may be used to endorse or promote products derived from this software without
# specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# -----
# NOTE:
# -----
#
# GUFI uses the C-Thread-Pool library.  The original version, written by
# Johan Hanssen Seferidis, is found at
# https://github.com/Pithikos/C-Thread-Pool/blob/master/LICENSE, and is
# released under the MIT License.  LANS, LLC added functionality to the
# original work.  The original work, plus LANS, LLC added functionality is
# found at https://github.com/jti-lanl/C-Thread-Pool, also under the MIT
# License.  The MIT License can be found at
# https://opensource.org/licenses/MIT.
#
#
# From Los Alamos National Security, LLC:
# LA-CC-15-039
#
# Copyright (c) 2017, Los Alamos National Security, LLC All rights reserved.
# Copyright 2017. Los Alamos National Security, LLC. This software was produced
# under U.S. Government contract DE-AC52-06NA25396 for Los Alamos National
# Laboratory (LANL), which is operated by Los Alamos National Security, LLC for
# the U.S. Department of Energy. The U.S. Government has rights to use,
# reproduce, and distribute this software.  NEITHER THE GOVERNMENT NOR LOS
# ALAMOS NATIONAL SECURITY, LLC MAKES ANY WARRANTY, EXPRESS OR IMPLIED, OR
# ASSUMES ANY LIABILITY FOR THE USE OF THIS SOFTWARE.  If software is
# modified to produce derivative works, such modified software should be
# clearly marked, so as not to confuse it with the version available from
# LANL.
#
# THIS SOFTWARE IS PROVIDED BY LOS ALAMOS NATIONAL SECURITY, LLC AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL LOS ALAMOS NATIONAL SECURITY, LLC OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
# OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
# OF SUCH DAMAGE.
#
#
#


SCRIPT="$BASH_SOURCE" # Must be at the top
DIR=`dirname $SCRIPT`
BFWI=$DIR/../bfwi


# NOTE: The destination GUFI-tree is optional
#       i.e. You can use bfwi just to do a breadth-first scan of the source-tree.
#       This might be useful to see the amount of time spent just in reading.


# Usage: bfwi [options] input_dir
# options:
#   -h              help
#   -H              show assigned input values (debugging)
#   -p              print file-names
#   -n <threads>    number of threads
#   -d <delim>      delimiter (one char)  [use 'x' for 0x1E]
#   -x              pull xattrs from source file-sys into GUFI
#   -P              print directories as they are encountered
#   -b              build GUFI index tree
#   -o <out_fname>  output file (one-per-thread, with thread-id suffix)
#   -t <to_dir>     dir GUFI-tree should be built
#   -u              consider input_dir to be input file
#
# input_dir         walk this tree to produce GUFI-tree
#


usage() {
    PROG=$1
    echo "Usage: $PROG <source_tree> [ <GUFI_tree> ]"
    exit -1
}

SOURCE=$1
GUFI_BASE=$2

if (( $# < 1 || $# > 2 )); then
    usage $0
elif [ ! -d $SOURCE ]; then
    usage $0
fi


# ...........................................................................
# WARNING!
#
#   bfwi builds the GUFI tree as a replication of the entire source-tree
#   underneath the <to_dir> directory that is provided with '-t' on the
#   command line.  For example:
#
#       source   = /a/b/c
#       to_dir   = .
#
#       actual GUFI-tree = ./a/b/c
#
#   We must be very careful during cleanup to avoid e.g. "rm -rf
#   to_dir" (i.e. the dir that is optionally provided on the
#   command-line).
#
# THEREFORE:
#
#   Use "$CLEAN_GUFI", to be safe
#
# ...........................................................................


# defaults
DEST=
CLEAN_GUFI=":"

if [ -n "$GUFI_BASE" ]; then
    DEST="-b -t $GUFI_BASE"
    GUFI="$GUFI_BASE/$SOURCE"
    CLEAN_GUFI="rm -rf $GUFI"
fi

# echo "clean:  $CLEAN_GUFI"



# run bfwi and send output to screen
echo
echo "out to screen"

echo $CLEAN_GUFI
$CLEAN_GUFI

echo $BFWI -n 2 -xP $DEST $SOURCE
$BFWI -n 1 -xP $DEST $SOURCE




# run to output files testout.*
echo
echo "send to output files"

echo $CLEAN_GUFI
$CLEAN_GUFI
rm -f  testout*

echo $BFWI -n 2 -xP -o testout $DEST $SOURCE
$BFWI -n 2 -xP -o testout $DEST $SOURCE

ls -l testout*
for F in testout*; do echo; echo $F; cat $F; done

if [ -n "$GUFI" ]; then
    ls -lR $GUFI
else
    echo
    echo "No <GUFI_tree> specified.  Skipping display of contents."
fi
