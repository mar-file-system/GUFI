This file is part of GUFI, which is part of MarFS, which is released
under the BSD license.


Copyright (c) 2017, Los Alamos National Security (LANS), LLC
All rights reserved.

Redistribution and use in source and binary forms, with or without modification,
are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation and/or
other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its contributors
may be used to endorse or promote products derived from this software without
specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


From Los Alamos National Security, LLC:
LA-CC-15-039

Copyright (c) 2017, Los Alamos National Security, LLC All rights reserved.
Copyright 2017. Los Alamos National Security, LLC. This software was produced
under U.S. Government contract DE-AC52-06NA25396 for Los Alamos National
Laboratory (LANL), which is operated by Los Alamos National Security, LLC for
the U.S. Department of Energy. The U.S. Government has rights to use,
reproduce, and distribute this software.  NEITHER THE GOVERNMENT NOR LOS
ALAMOS NATIONAL SECURITY, LLC MAKES ANY WARRANTY, EXPRESS OR IMPLIED, OR
ASSUMES ANY LIABILITY FOR THE USE OF THIS SOFTWARE.  If software is
modified to produce derivative works, such modified software should be
clearly marked, so as not to confuse it with the version available from
LANL.

THIS SOFTWARE IS PROVIDED BY LOS ALAMOS NATIONAL SECURITY, LLC AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL LOS ALAMOS NATIONAL SECURITY, LLC OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
OF SUCH DAMAGE.



dfw - depth first walk of tree using readdir, or readdir/stat, or
      readdir/xattr or readdir/stat/xattr based on passed-in flags,
      just writes output to stdout

dfw - dfw depth first file system tree walk printing:
      path, type, stat info, linkname
      optionally if asked for xattrs
      syntax dfw -s -x -h -d -l directorytowalk (or file to print info on)
      -s stat everything - otherwise this is just a readdirplus walk
      -x get xattrs
      -d delimiter (one char)  [use 'x' for 0x1E]
      -D dont traverse/descend the tree, just stat this directory or file
      -l print in loader format (only works if -x and -s are provided
      -h help

if you run with no options, this is just a readdirplus walk and print

if you run with -s it stats everything and prints

if you run with -x it pulls xattr info and prints that

If you us -s -x -d '|' -l  in conjunction (using any delimiter you wish)
dfw will print out a record suitable for sorting and then loading using bfwi -u option which loads/builds a gufi tree from a flat file
the file format for bfwi -u is director then all the files and links for that directory, then another directory etc.
the record format is pathname,normal attrs, linkname, xattrs  and must be delimited by something unique from the data
the output of dfw in this use mode puts 2 sort fields on the end of the records (which can be left in the file as bfwi -u will ignore them)
the sort records are path (the directory full pathname for a directory or just the directory path for a file/link (field 17), and type (field 18) )
To get the proper order you need to sort the file using the following method or similar
sort -t '|' -k17,17 -k18,18 -o sortedoutputfile outputfromdfw
this sortedoutputfile can be used in bfwi -u as the input file to create a gufi tree from
dfw does not have sqlite or cthreads calls so it should be easier to build this on a computer, run to get the output file and move the output file
to a machine for bfwi to be used to load into a gufi tree

Normally you would pass dfw the name of a directory and it would walk the tree, but since the input is a pathname, it could a pathname be to a file
If its a pathname to a file, dfw will just print info about that file.  This enables you to use something like
find path -exec dfw -s -x -d '|' -l -D {} \; which will print information about files that are found using the find command and make a suitable file for loading
into gufi using bfwi -u or other uses.  Notice the use of -D which tells dfw to not descend into the tree, just stat this pathname and print,
because find will be traversing or whatever you ask it to do.


Flow:
if input is a file/link then stat/pull xattrs and print,
if input is a directory then single threaded depth first walk, using readdir+, or stat depending on input parms and optionally get xattrs, write output to stdout
